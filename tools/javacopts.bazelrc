# Mirrors the options set in https://github.com/GerritCodeReview/gerrit/blob/master/tools/BUILD
# which are based on the checks enabled internally at Google.
build --javacopt="-Xep:AlmostJavadoc:ERROR"
build --javacopt="-Xep:AlreadyChecked:ERROR"
build --javacopt="-Xep:AlwaysThrows:ERROR"
build --javacopt="-Xep:AmbiguousMethodReference:ERROR"
build --javacopt="-Xep:AnnotateFormatMethod:ERROR"
build --javacopt="-Xep:AnnotationPosition:ERROR"
build --javacopt="-Xep:ArgumentSelectionDefectChecker:ERROR"
build --javacopt="-Xep:ArrayAsKeyOfSetOrMap:ERROR"
build --javacopt="-Xep:ArrayEquals:ERROR"
build --javacopt="-Xep:ArrayFillIncompatibleType:ERROR"
build --javacopt="-Xep:ArrayHashCode:ERROR"
build --javacopt="-Xep:ArraysAsListPrimitiveArray:ERROR"
build --javacopt="-Xep:ArrayToString:ERROR"
build --javacopt="-Xep:AssertEqualsArgumentOrderChecker:ERROR"
build --javacopt="-Xep:AssertionFailureIgnored:ERROR"
build --javacopt="-Xep:AssignmentToMock:ERROR"
build --javacopt="-Xep:AsyncCallableReturnsNull:ERROR"
build --javacopt="-Xep:AsyncFunctionReturnsNull:ERROR"
build --javacopt="-Xep:AutoValueConstructorOrderChecker:ERROR"
build --javacopt="-Xep:AutoValueFinalMethods:ERROR"
build --javacopt="-Xep:AutoValueImmutableFields:ERROR"
build --javacopt="-Xep:AutoValueSubclassLeaked:ERROR"
build --javacopt="-Xep:BadAnnotationImplementation:ERROR"
build --javacopt="-Xep:BadComparable:ERROR"
build --javacopt="-Xep:BadImport:ERROR"
build --javacopt="-Xep:BadInstanceof:ERROR"
build --javacopt="-Xep:BadShiftAmount:ERROR"
build --javacopt="-Xep:BanSerializableRead:ERROR"
build --javacopt="-Xep:BigDecimalEquals:ERROR"
build --javacopt="-Xep:BigDecimalLiteralDouble:ERROR"
build --javacopt="-Xep:BoxedPrimitiveConstructor:ERROR"
build --javacopt="-Xep:BoxedPrimitiveEquality:ERROR"
build --javacopt="-Xep:BundleDeserializationCast:ERROR"
build --javacopt="-Xep:ByteBufferBackingArray:ERROR"
build --javacopt="-Xep:CacheLoaderNull:ERROR"
build --javacopt="-Xep:CannotMockFinalClass:ERROR"
build --javacopt="-Xep:CanonicalDuration:ERROR"
build --javacopt="-Xep:CatchAndPrintStackTrace:ERROR"
build --javacopt="-Xep:CatchFail:ERROR"
build --javacopt="-Xep:CatchingUnchecked:ERROR"
build --javacopt="-Xep:ChainedAssertionLosesContext:ERROR"
build --javacopt="-Xep:ChainingConstructorIgnoresParameter:ERROR"
build --javacopt="-Xep:CharacterGetNumericValue:ERROR"
build --javacopt="-Xep:CheckedExceptionNotThrown:ERROR"
build --javacopt="-Xep:CheckNotNullMultipleTimes:ERROR"
build --javacopt="-Xep:CheckReturnValue:ERROR"
build --javacopt="-Xep:ClassCanBeStatic:ERROR"
build --javacopt="-Xep:ClassName:ERROR"
build --javacopt="-Xep:ClassNewInstance:ERROR"
build --javacopt="-Xep:CollectionIncompatibleType:ERROR"
build --javacopt="-Xep:CollectionToArraySafeParameter:ERROR"
build --javacopt="-Xep:CollectionUndefinedEquality:ERROR"
build --javacopt="-Xep:CollectorShouldNotUseState:ERROR"
build --javacopt="-Xep:ComparableAndComparator:ERROR"
build --javacopt="-Xep:ComparableType:ERROR"
build --javacopt="-Xep:CompareToZero:ERROR"
build --javacopt="-Xep:ComparingThisWithNull:ERROR"
build --javacopt="-Xep:ComparisonOutOfRange:ERROR"
build --javacopt="-Xep:CompatibleWithAnnotationMisuse:ERROR"
build --javacopt="-Xep:CompileTimeConstant:ERROR"
build --javacopt="-Xep:ComplexBooleanConstant:ERROR"
build --javacopt="-Xep:ComputeIfAbsentAmbiguousReference:ERROR"
build --javacopt="-Xep:ConditionalExpressionNumericPromotion:ERROR"
build --javacopt="-Xep:ConstantField:ERROR"
build --javacopt="-Xep:ConstantOverflow:ERROR"
build --javacopt="-Xep:DaggerProvidesNull:ERROR"
build --javacopt="-Xep:DangerousLiteralNull:ERROR"
build --javacopt="-Xep:DateChecker:ERROR"
build --javacopt="-Xep:DateFormatConstant:ERROR"
build --javacopt="-Xep:DeadException:ERROR"
build --javacopt="-Xep:DeadThread:ERROR"
build --javacopt="-Xep:DefaultCharset:ERROR"
build --javacopt="-Xep:DefaultPackage:ERROR"
build --javacopt="-Xep:DepAnn:ERROR"
build --javacopt="-Xep:DeprecatedVariable:ERROR"
build --javacopt="-Xep:DescribeMatch:ERROR"
build --javacopt="-Xep:DiscardedPostfixExpression:ERROR"
build --javacopt="-Xep:DoNotCall:ERROR"
build --javacopt="-Xep:DoNotCallSuggester:ERROR"
build --javacopt="-Xep:DoNotClaimAnnotations:ERROR"
build --javacopt="-Xep:DoNotMock:ERROR"
build --javacopt="-Xep:DoNotMockAutoValue:ERROR"
build --javacopt="-Xep:DoNotMockForTricorder:ERROR"
build --javacopt="-Xep:DoubleBraceInitialization:ERROR"
build --javacopt="-Xep:DoubleCheckedLocking:ERROR"
build --javacopt="-Xep:DuplicateMapKeys:ERROR"
build --javacopt="-Xep:DurationFrom:ERROR"
build --javacopt="-Xep:DurationGetTemporalUnit:ERROR"
build --javacopt="-Xep:DurationTemporalUnit:ERROR"
build --javacopt="-Xep:DurationToLongTimeUnit:ERROR"
build --javacopt="-Xep:EmptyBlockTag:ERROR"
build --javacopt="-Xep:EmptyCatch:ERROR"
build --javacopt="-Xep:EmptySetMultibindingContributions:ERROR"
build --javacopt="-Xep:EqualsBrokenForNull:ERROR"
build --javacopt="-Xep:EqualsGetClass:ERROR"
build --javacopt="-Xep:EqualsHashCode:ERROR"
build --javacopt="-Xep:EqualsIncompatibleType:ERROR"
build --javacopt="-Xep:EqualsNaN:ERROR"
build --javacopt="-Xep:EqualsNull:ERROR"
build --javacopt="-Xep:EqualsReference:ERROR"
build --javacopt="-Xep:EqualsUnsafeCast:ERROR"
build --javacopt="-Xep:EqualsUsingHashCode:ERROR"
build --javacopt="-Xep:EqualsWrongThing:ERROR"
build --javacopt="-Xep:ErroneousThreadPoolConstructorChecker:ERROR"
build --javacopt="-Xep:EscapedEntity:ERROR"
build --javacopt="-Xep:ExpectedExceptionChecker:ERROR"
build --javacopt="-Xep:ExtendingJUnitAssert:ERROR"
build --javacopt="-Xep:ExtendsAutoValue:ERROR"
build --javacopt="-Xep:FallThrough:ERROR"
build --javacopt="-Xep:FieldCanBeStatic:ERROR"
build --javacopt="-Xep:Finally:ERROR"
build --javacopt="-Xep:FloatCast:ERROR"
build --javacopt="-Xep:FloatingPointAssertionWithinEpsilon:ERROR"
build --javacopt="-Xep:FloatingPointLiteralPrecision:ERROR"
build --javacopt="-Xep:FloggerArgumentToString:ERROR"
build --javacopt="-Xep:FloggerFormatString:ERROR"
build --javacopt="-Xep:FloggerLogVarargs:ERROR"
build --javacopt="-Xep:FloggerSplitLogStatement:ERROR"
build --javacopt="-Xep:FloggerStringConcatenation:ERROR"
build --javacopt="-Xep:ForEachIterable:ERROR"
build --javacopt="-Xep:FormatString:ERROR"
build --javacopt="-Xep:FormatStringAnnotation:ERROR"
build --javacopt="-Xep:ForOverride:ERROR"
build --javacopt="-Xep:FragmentInjection:ERROR"
build --javacopt="-Xep:FragmentNotInstantiable:ERROR"
build --javacopt="-Xep:FromTemporalAccessor:ERROR"
build --javacopt="-Xep:FunctionalInterfaceClash:ERROR"
build --javacopt="-Xep:FunctionalInterfaceMethodChanged:ERROR"
build --javacopt="-Xep:FutureReturnValueIgnored:ERROR"
build --javacopt="-Xep:FuturesGetCheckedIllegalExceptionType:ERROR"
build --javacopt="-Xep:GetClassOnAnnotation:ERROR"
build --javacopt="-Xep:GetClassOnClass:ERROR"
build --javacopt="-Xep:GetClassOnEnum:ERROR"
build --javacopt="-Xep:GuardedBy:ERROR"
build --javacopt="-Xep:GuiceAssistedInjectScoping:ERROR"
build --javacopt="-Xep:GuiceAssistedParameters:ERROR"
build --javacopt="-Xep:HashCodeToString:ERROR"
build --javacopt="-Xep:HashtableContains:ERROR"
build --javacopt="-Xep:HidingField:ERROR"
build --javacopt="-Xep:IdentityBinaryExpression:ERROR"
build --javacopt="-Xep:IdentityHashMapBoxing:ERROR"
build --javacopt="-Xep:IdentityHashMapUsage:ERROR"
build --javacopt="-Xep:IgnoredPureGetter:ERROR"
build --javacopt="-Xep:Immutable:ERROR"
build --javacopt="-Xep:ImmutableAnnotationChecker:ERROR"
build --javacopt="-Xep:ImmutableEnumChecker:ERROR"
build --javacopt="-Xep:ImmutableModification:ERROR"
build --javacopt="-Xep:Incomparable:ERROR"
build --javacopt="-Xep:IncompatibleArgumentType:ERROR"
build --javacopt="-Xep:IncompatibleModifiers:ERROR"
build --javacopt="-Xep:InconsistentCapitalization:ERROR"
build --javacopt="-Xep:InconsistentHashCode:ERROR"
build --javacopt="-Xep:IncrementInForLoopAndHeader:ERROR"
build --javacopt="-Xep:IndexOfChar:ERROR"
build --javacopt="-Xep:InexactVarargsConditional:ERROR"
build --javacopt="-Xep:InfiniteRecursion:ERROR"
build --javacopt="-Xep:InheritDoc:ERROR"
build --javacopt="-Xep:InitializeInline:ERROR"
build --javacopt="-Xep:InjectOnConstructorOfAbstractClass:ERROR"
build --javacopt="-Xep:InlineFormatString:ERROR"
build --javacopt="-Xep:InlineMeInliner:ERROR"
build --javacopt="-Xep:InlineMeSuggester:ERROR"
build --javacopt="-Xep:InlineMeValidator:ERROR"
build --javacopt="-Xep:InputStreamSlowMultibyteRead:ERROR"
build --javacopt="-Xep:InsecureCryptoUsage:ERROR"
build --javacopt="-Xep:InstanceOfAndCastMatchWrongType:ERROR"
build --javacopt="-Xep:InstantTemporalUnit:ERROR"
build --javacopt="-Xep:InterfaceWithOnlyStatics:ERROR"
build --javacopt="-Xep:InterruptedExceptionSwallowed:ERROR"
build --javacopt="-Xep:IntLongMath:ERROR"
build --javacopt="-Xep:InvalidBlockTag:ERROR"
build --javacopt="-Xep:InvalidInlineTag:ERROR"
build --javacopt="-Xep:InvalidJavaTimeConstant:ERROR"
build --javacopt="-Xep:InvalidLink:ERROR"
build --javacopt="-Xep:InvalidParam:ERROR"
build --javacopt="-Xep:InvalidPatternSyntax:ERROR"
build --javacopt="-Xep:InvalidTargetingOnScopingAnnotation:ERROR"
build --javacopt="-Xep:InvalidThrows:ERROR"
build --javacopt="-Xep:InvalidThrowsLink:ERROR"
build --javacopt="-Xep:InvalidTimeZoneID:ERROR"
build --javacopt="-Xep:InvalidZoneId:ERROR"
build --javacopt="-Xep:IsInstanceIncompatibleType:ERROR"
build --javacopt="-Xep:IsInstanceOfClass:ERROR"
build --javacopt="-Xep:IsLoggableTagLength:ERROR"
build --javacopt="-Xep:IterableAndIterator:ERROR"
build --javacopt="-Xep:IterablePathParameter:ERROR"
build --javacopt="-Xep:JavaDurationGetSecondsGetNano:ERROR"
build --javacopt="-Xep:JavaDurationWithNanos:ERROR"
build --javacopt="-Xep:JavaDurationWithSeconds:ERROR"
build --javacopt="-Xep:JavaInstantGetSecondsGetNano:ERROR"
build --javacopt="-Xep:JavaLangClash:ERROR"
build --javacopt="-Xep:JavaLocalDateTimeGetNano:ERROR"
build --javacopt="-Xep:JavaLocalTimeGetNano:ERROR"
build --javacopt="-Xep:JavaNetIdnChecker:ERROR"
build --javacopt="-Xep:JavaPeriodGetDays:ERROR"
build --javacopt="-Xep:JavaTimeDefaultTimeZone:ERROR"
build --javacopt="-Xep:JavaUtilDate:ERROR"
build --javacopt="-Xep:JdkObsolete:ERROR"
build --javacopt="-Xep:JodaConstructors:ERROR"
build --javacopt="-Xep:JodaDateTimeConstants:ERROR"
build --javacopt="-Xep:JodaDurationWithMillis:ERROR"
build --javacopt="-Xep:JodaInstantWithMillis:ERROR"
build --javacopt="-Xep:JodaNewPeriod:ERROR"
build --javacopt="-Xep:JodaPlusMinusLong:ERROR"
build --javacopt="-Xep:JodaTimeConverterManager:ERROR"
build --javacopt="-Xep:JodaToSelf:ERROR"
build --javacopt="-Xep:JodaWithDurationAddedLong:ERROR"
build --javacopt="-Xep:JUnit3FloatingPointComparisonWithoutDelta:ERROR"
build --javacopt="-Xep:JUnit3TestNotRun:ERROR"
build --javacopt="-Xep:JUnit4ClassAnnotationNonStatic:ERROR"
build --javacopt="-Xep:JUnit4ClassUsedInJUnit3:ERROR"
build --javacopt="-Xep:JUnit4SetUpNotRun:ERROR"
build --javacopt="-Xep:JUnit4TearDownNotRun:ERROR"
build --javacopt="-Xep:JUnit4TestNotRun:ERROR"
build --javacopt="-Xep:JUnit4TestsNotRunWithinEnclosed:ERROR"
build --javacopt="-Xep:JUnitAmbiguousTestClass:ERROR"
build --javacopt="-Xep:JUnitAssertSameCheck:ERROR"
build --javacopt="-Xep:JUnitParameterMethodNotFound:ERROR"
build --javacopt="-Xep:LiteByteStringUtf8:ERROR"
build --javacopt="-Xep:LiteEnumValueOf:ERROR"
build --javacopt="-Xep:LiteProtoToString:ERROR"
build --javacopt="-Xep:LocalDateTemporalAmount:ERROR"
build --javacopt="-Xep:LockNotBeforeTry:ERROR"
build --javacopt="-Xep:LockOnBoxedPrimitive:ERROR"
build --javacopt="-Xep:LogicalAssignment:ERROR"
build --javacopt="-Xep:LongFloatConversion:ERROR"
build --javacopt="-Xep:LongLiteralLowerCaseSuffix:ERROR"
build --javacopt="-Xep:LoopConditionChecker:ERROR"
build --javacopt="-Xep:LoopOverCharArray:ERROR"
build --javacopt="-Xep:LossyPrimitiveCompare:ERROR"
build --javacopt="-Xep:MathAbsoluteRandom:ERROR"
build --javacopt="-Xep:MathRoundIntLong:ERROR"
build --javacopt="-Xep:MemberName:ERROR"
build --javacopt="-Xep:MemoizeConstantVisitorStateLookups:ERROR"
build --javacopt="-Xep:MislabeledAndroidString:ERROR"
build --javacopt="-Xep:MissingCasesInEnumSwitch:ERROR"
build --javacopt="-Xep:MissingDefault:ERROR"
build --javacopt="-Xep:MissingFail:ERROR"
build --javacopt="-Xep:MissingOverride:ERROR"
build --javacopt="-Xep:MissingSummary:ERROR"
build --javacopt="-Xep:MissingSuperCall:ERROR"
build --javacopt="-Xep:MissingTestCall:ERROR"
build --javacopt="-Xep:MisusedDayOfYear:ERROR"
build --javacopt="-Xep:MisusedWeekYear:ERROR"
build --javacopt="-Xep:MixedArrayDimensions:ERROR"
build --javacopt="-Xep:MixedDescriptors:ERROR"
build --javacopt="-Xep:MixedMutabilityReturnType:ERROR"
build --javacopt="-Xep:MockitoUsage:ERROR"
build --javacopt="-Xep:ModifiedButNotUsed:ERROR"
build --javacopt="-Xep:ModifyCollectionInEnhancedForLoop:ERROR"
build --javacopt="-Xep:ModifyingCollectionWithItself:ERROR"
build --javacopt="-Xep:ModifySourceCollectionInStream:ERROR"
build --javacopt="-Xep:MultipleParallelOrSequentialCalls:ERROR"
build --javacopt="-Xep:MultipleTopLevelClasses:ERROR"
build --javacopt="-Xep:MultipleUnaryOperatorsInMethodCall:ERROR"
build --javacopt="-Xep:MultiVariableDeclaration:ERROR"
build --javacopt="-Xep:MustBeClosedChecker:ERROR"
build --javacopt="-Xep:MutableConstantField:ERROR"
build --javacopt="-Xep:MutableMethodReturnType:ERROR"
build --javacopt="-Xep:MutablePublicArray:ERROR"
build --javacopt="-Xep:NarrowingCompoundAssignment:ERROR"
build --javacopt="-Xep:NCopiesOfChar:ERROR"
build --javacopt="-Xep:NestedInstanceOfConditions:ERROR"
build --javacopt="-Xep:NonAtomicVolatileUpdate:ERROR"
build --javacopt="-Xep:NonCanonicalStaticImport:ERROR"
build --javacopt="-Xep:NonCanonicalType:ERROR"
build --javacopt="-Xep:NonFinalCompileTimeConstant:ERROR"
build --javacopt="-Xep:NonOverridingEquals:ERROR"
build --javacopt="-Xep:NonRuntimeAnnotation:ERROR"
build --javacopt="-Xep:NullableConstructor:ERROR"
build --javacopt="-Xep:NullablePrimitive:ERROR"
build --javacopt="-Xep:NullablePrimitiveArray:ERROR"
build --javacopt="-Xep:NullableVoid:ERROR"
build --javacopt="-Xep:NullOptional:ERROR"
build --javacopt="-Xep:NullTernary:ERROR"
build --javacopt="-Xep:ObjectEqualsForPrimitives:ERROR"
build --javacopt="-Xep:ObjectsHashCodePrimitive:ERROR"
build --javacopt="-Xep:ObjectToString:ERROR"
build --javacopt="-Xep:OperatorPrecedence:ERROR"
build --javacopt="-Xep:OptionalEquality:ERROR"
build --javacopt="-Xep:OptionalMapToOptional:ERROR"
build --javacopt="-Xep:OptionalMapUnusedValue:ERROR"
build --javacopt="-Xep:OptionalNotPresent:ERROR"
build --javacopt="-Xep:OptionalOfRedundantMethod:ERROR"
build --javacopt="-Xep:OrphanedFormatString:ERROR"
build --javacopt="-Xep:OutlineNone:ERROR"
build --javacopt="-Xep:OverlappingQualifierAndScopeAnnotation:ERROR"
build --javacopt="-Xep:Overrides:ERROR"
build --javacopt="-Xep:OverridesGuiceInjectableMethod:ERROR"
build --javacopt="-Xep:OverridesJavaxInjectableMethod:ERROR"
build --javacopt="-Xep:OverrideThrowableToString:ERROR"
build --javacopt="-Xep:PackageInfo:ERROR"
build --javacopt="-Xep:PackageLocation:ERROR"
build --javacopt="-Xep:ParameterName:ERROR"
build --javacopt="-Xep:ParametersButNotParameterized:ERROR"
build --javacopt="-Xep:ParcelableCreator:ERROR"
build --javacopt="-Xep:PeriodFrom:ERROR"
build --javacopt="-Xep:PeriodGetTemporalUnit:ERROR"
build --javacopt="-Xep:PeriodTimeMath:ERROR"
build --javacopt="-Xep:PreconditionsCheckNotNullRepeated:ERROR"
build --javacopt="-Xep:PreconditionsInvalidPlaceholder:ERROR"
build --javacopt="-Xep:PrimitiveAtomicReference:ERROR"
build --javacopt="-Xep:PrivateConstructorForUtilityClass:ERROR"
build --javacopt="-Xep:PrivateSecurityContractProtoAccess:ERROR"
build --javacopt="-Xep:ProtectedMembersInFinalClass:ERROR"
build --javacopt="-Xep:ProtoBuilderReturnValueIgnored:ERROR"
build --javacopt="-Xep:ProtocolBufferOrdinal:ERROR"
build --javacopt="-Xep:ProtoDurationGetSecondsGetNano:ERROR"
build --javacopt="-Xep:ProtoFieldNullComparison:ERROR"
build --javacopt="-Xep:ProtoRedundantSet:ERROR"
build --javacopt="-Xep:ProtoStringFieldReferenceEquality:ERROR"
build --javacopt="-Xep:ProtoTimestampGetSecondsGetNano:ERROR"
build --javacopt="-Xep:ProtoTruthMixedDescriptors:ERROR"
build --javacopt="-Xep:ProvidesMethodOutsideOfModule:ERROR"
build --javacopt="-Xep:QualifierWithTypeUse:ERROR"
build --javacopt="-Xep:RandomCast:ERROR"
build --javacopt="-Xep:RandomModInteger:ERROR"
build --javacopt="-Xep:ReachabilityFenceUsage:ERROR"
build --javacopt="-Xep:RectIntersectReturnValueIgnored:ERROR"
build --javacopt="-Xep:RedundantCondition:ERROR"
build --javacopt="-Xep:RedundantOverride:ERROR"
build --javacopt="-Xep:ReferenceEquality:ERROR"
build --javacopt="-Xep:RefersToDaggerCodegen:ERROR"
build --javacopt="-Xep:RemovedInJDK11:ERROR"
build --javacopt="-Xep:RemoveUnusedImports:ERROR"
build --javacopt="-Xep:RequiredModifiers:ERROR"
build --javacopt="-Xep:RestrictedApiChecker:ERROR"
build --javacopt="-Xep:RethrowReflectiveOperationExceptionAsLinkageError:ERROR"
build --javacopt="-Xep:ReturnFromVoid:ERROR"
build --javacopt="-Xep:ReturnMissingNullable:ERROR"
build --javacopt="-Xep:ReturnValueIgnored:ERROR"
build --javacopt="-Xep:RxReturnValueIgnored:ERROR"
build --javacopt="-Xep:SameNameButDifferent:ERROR"
build --javacopt="-Xep:ScopeAnnotationOnInterfaceOrAbstractClass:ERROR"
build --javacopt="-Xep:ScopeOrQualifierAnnotationRetention:ERROR"
build --javacopt="-Xep:SelfAssignment:ERROR"
build --javacopt="-Xep:SelfComparison:ERROR"
build --javacopt="-Xep:SelfEquals:ERROR"
build --javacopt="-Xep:ShortCircuitBoolean:ERROR"
build --javacopt="-Xep:ShouldHaveEvenArgs:ERROR"
build --javacopt="-Xep:SizeGreaterThanOrEqualsZero:ERROR"
build --javacopt="-Xep:StaticAssignmentInConstructor:ERROR"
build --javacopt="-Xep:StaticGuardedByInstance:ERROR"
build --javacopt="-Xep:StaticMockMember:ERROR"
build --javacopt="-Xep:StaticQualifiedUsingExpression:ERROR"
build --javacopt="-Xep:StreamToString:ERROR"
build --javacopt="-Xep:StringBuilderInitWithChar:ERROR"
build --javacopt="-Xep:StringEquality:ERROR"
build --javacopt="-Xep:StringSplitter:ERROR"
build --javacopt="-Xep:StronglyTypeTime:ERROR"
build --javacopt="-Xep:SubstringOfZero:ERROR"
build --javacopt="-Xep:SuppressWarningsDeprecated:ERROR"
build --javacopt="-Xep:SwigMemoryLeak:ERROR"
build --javacopt="-Xep:SwitchDefault:ERROR"
build --javacopt="-Xep:SynchronizeOnNonFinalField:ERROR"
build --javacopt="-Xep:TemporalAccessorGetChronoField:ERROR"
build --javacopt="-Xep:TestExceptionChecker:ERROR"
build --javacopt="-Xep:TestParametersNotInitialized:ERROR"
build --javacopt="-Xep:TheoryButNoTheories:ERROR"
build --javacopt="-Xep:ThreadJoinLoop:ERROR"
build --javacopt="-Xep:ThreadLocalUsage:ERROR"
build --javacopt="-Xep:ThreadPriorityCheck:ERROR"
build --javacopt="-Xep:ThreeLetterTimeZoneID:ERROR"
build --javacopt="-Xep:ThrowIfUncheckedKnownChecked:ERROR"
build --javacopt="-Xep:ThrowNull:ERROR"
build --javacopt="-Xep:TimeUnitConversionChecker:ERROR"
build --javacopt="-Xep:TimeUnitMismatch:ERROR"
build --javacopt="-Xep:ToStringReturnsNull:ERROR"
build --javacopt="-Xep:TransientMisuse:ERROR"
build --javacopt="-Xep:TreeToString:ERROR"
build --javacopt="-Xep:TruthAssertExpected:ERROR"
build --javacopt="-Xep:TruthConstantAsserts:ERROR"
build --javacopt="-Xep:TruthGetOrDefault:ERROR"
build --javacopt="-Xep:TruthIncompatibleType:ERROR"
build --javacopt="-Xep:TruthSelfEquals:ERROR"
build --javacopt="-Xep:TryFailThrowable:ERROR"
build --javacopt="-Xep:TypeEquals:ERROR"
build --javacopt="-Xep:TypeEqualsChecker:ERROR"
build --javacopt="-Xep:TypeNameShadowing:ERROR"
build --javacopt="-Xep:TypeParameterNaming:ERROR"
build --javacopt="-Xep:TypeParameterQualifier:ERROR"
build --javacopt="-Xep:TypeParameterShadowing:ERROR"
build --javacopt="-Xep:TypeParameterUnusedInFormals:ERROR"
build --javacopt="-Xep:UndefinedEquals:ERROR"
build --javacopt="-Xep:UnescapedEntity:ERROR"
build --javacopt="-Xep:UngroupedOverloads:ERROR"
build --javacopt="-Xep:UnnecessarilyVisible:ERROR"
build --javacopt="-Xep:UnnecessaryAnonymousClass:ERROR"
build --javacopt="-Xep:UnnecessaryAssignment:ERROR"
build --javacopt="-Xep:UnnecessaryBoxedAssignment:ERROR"
build --javacopt="-Xep:UnnecessaryBoxedVariable:ERROR"
build --javacopt="-Xep:UnnecessaryCheckNotNull:ERROR"
build --javacopt="-Xep:UnnecessaryDefaultInEnumSwitch:ERROR"
build --javacopt="-Xep:UnnecessaryLambda:ERROR"
build --javacopt="-Xep:UnnecessaryMethodInvocationMatcher:ERROR"
build --javacopt="-Xep:UnnecessaryMethodReference:ERROR"
build --javacopt="-Xep:UnnecessaryOptionalGet:ERROR"
build --javacopt="-Xep:UnnecessaryParentheses:ERROR"
build --javacopt="-Xep:UnnecessaryStaticImport:ERROR"
build --javacopt="-Xep:UnnecessaryTypeArgument:ERROR"
build --javacopt="-Xep:UnrecognisedJavadocTag:ERROR"
build --javacopt="-Xep:UnsafeFinalization:ERROR"
build --javacopt="-Xep:UnsafeReflectiveConstructionCast:ERROR"
build --javacopt="-Xep:UnsynchronizedOverridesSynchronized:ERROR"
build --javacopt="-Xep:UnusedAnonymousClass:ERROR"
build --javacopt="-Xep:UnusedCollectionModifiedInPlace:ERROR"
build --javacopt="-Xep:UnusedException:ERROR"
build --javacopt="-Xep:UnusedMethod:ERROR"
build --javacopt="-Xep:UnusedNestedClass:ERROR"
build --javacopt="-Xep:UnusedVariable:ERROR"
build --javacopt="-Xep:URLEqualsHashCode:ERROR"
build --javacopt="-Xep:UrlInSee:ERROR"
build --javacopt="-Xep:UseBinds:ERROR"
build --javacopt="-Xep:UseCorrectAssertInTests:ERROR"
build --javacopt="-Xep:UseEnumSwitch:ERROR"
build --javacopt="-Xep:UseTimeInScope:ERROR"
build --javacopt="-Xep:VariableNameSameAsType:ERROR"
build --javacopt="-Xep:VarTypeName:ERROR"
build --javacopt="-Xep:VisibleForTestingInTests:ERROR"
build --javacopt="-Xep:VisibleForTestingMisused:ERROR"
build --javacopt="-Xep:VisibleForTestingOverride:ERROR"
build --javacopt="-Xep:VisibleForTestingUsed:ERROR"
build --javacopt="-Xep:WaitNotInLoop:ERROR"
build --javacopt="-Xep:WakelockReleasedDangerously:ERROR"
build --javacopt="-Xep:WildcardImport:ERROR"
build --javacopt="-Xep:WithSignatureDiscouraged:ERROR"
build --javacopt="-Xep:WrongOneof:ERROR"
build --javacopt="-Xep:XorPower:ERROR"
build --javacopt="-Xep:ZoneIdOfZ",
build --javacopt="-XepDisableWarningsInGeneratedCode"
build --javacopt="-XepExcludedPaths:.*/(external|_javac|testdata)/.*"
build --javacopt="-Xlint:-options"
