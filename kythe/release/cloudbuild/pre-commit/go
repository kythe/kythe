#!/bin/bash -e
#
# Copyright 2019 The Kythe Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Wrapper script to run the Go version specified by a go.mod file.

CACHE="$HOME/.cache/goversions"

GO="$(command -v go | xargs -L1 realpath | grep -v "$(realpath "$0")" | head -n1)"
if ! [[ -x "$GO" ]]; then
  echo "ERROR: failed to find ambient go tool" >&2
  exit 1
fi

find_gomod() {
  local dir="$PWD"
  local f="$dir/go.mod"
  while true; do
    if [[ -r "$f" ]]; then
      echo "$f"
      return
    elif [[ "/" == "$dir" ]]; then
      return 1
    fi
    dir="$(dirname "$dir")"
  done
}

if ! gomod="$(find_gomod)"; then
  echo "WARNING: could not find go.mod" >&2
  exec "$GO" "$@"
fi

if ! version="$(grep -Po '(?<=^go\s)\d+(\.\d+)+$' "$gomod")"; then
  echo "WARNING: could not find version in go.mod" >&2
  exec "$GO" "$@"
fi

GOROOT="${CACHE}/${version}/go"

if [[ -x "$GOROOT/bin/go" ]]; then
  # Cache hit: exec go tool
  exec "$GOROOT/bin/go" "$@"
fi

# Setup temporary location for archive
archive="$(mktemp)"
trap "rm '$archive'" EXIT ERR INT

# Download and extract Go compiler
url="https://dl.google.com/go/go${version}.linux-amd64.tar.gz"
curl -L "$url">"$archive"
dir="$(dirname "$GOROOT")"
rm -rf "$dir"
mkdir -p "$dir"
tar xf "$archive" -C "$dir"
rm -f "$archive"

# Run go tool
exec "$GOROOT/bin/go" "$@"
