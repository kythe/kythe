// Test proto for signatures.

syntax = "proto2";

package proto_kythe_test;

//- @Message defines/binding Message
//- Message.code/rendered/qualified_name "proto_kythe_test.Message"
//- Message.code/rendered/signature "message Message"
message Message {
  //- @R defines/binding R
  //- R.code/rendered/qualified_name "proto_kythe_test.Message.R"
  //- R.code/rendered/signature "required string R"
  required string R = 1;

  //- @I defines/binding I
  //- I.code/rendered/qualified_name "proto_kythe_test.Message.I"
  //- I.code/rendered/signature "optional int32 I"
  optional int32 I = 2;

  //- @L defines/binding L
  //- L.code/rendered/qualified_name "proto_kythe_test.Message.L"
  //- L.code/rendered/signature "repeated Message L"
  repeated Message L = 3;

  //- @#1E defines/binding E
  //- E.code/rendered/qualified_name "proto_kythe_test.Message.E"
  //- E.code/rendered/signature "optional Enum E"
  optional Enum E = 4;

  //- @#1M defines/binding Map
  //- Map.code/rendered/signature "map<string, Message> M"
  map<string, Message> M = 5;
}

//- @Enum defines/binding Enum
//- Enum.code/rendered/qualified_name "proto_kythe_test.Enum"
//- Enum.code/rendered/signature "enum Enum"
enum Enum {
  //- @DEFAULT defines/binding Default
  //- Default.code/rendered/qualified_name "proto_kythe_test.Enum.DEFAULT"
  //- Default.code/rendered/signature "DEFAULT"
  DEFAULT = 0;
}

//- @Service defines/binding Service
//- Service.code/rendered/qualified_name "proto_kythe_test.Service"
//- Service.code/rendered/signature "service Service"
service Service {
  //- @Method defines/binding M
  //- M.code/rendered/qualified_name "proto_kythe_test.Service.Method"
  //- M.code/rendered/signature "rpc Method"
  rpc Method(Message) returns (Message) {}
}
