// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: kythe/proto/internal.proto

package internal_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	serving_go_proto "kythe.io/kythe/proto/serving_go_proto"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket     string                       `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Facts      map[string][]byte            `protobuf:"bytes,2,rep,name=facts,proto3" json:"facts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EdgeGroups map[string]*Source_EdgeGroup `protobuf:"bytes,3,rep,name=edge_groups,json=edgeGroups,proto3" json:"edge_groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{0}
}

func (x *Source) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *Source) GetFacts() map[string][]byte {
	if x != nil {
		return x.Facts
	}
	return nil
}

func (x *Source) GetEdgeGroups() map[string]*Source_EdgeGroup {
	if x != nil {
		return x.EdgeGroups
	}
	return nil
}

type PageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index          int32             `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	SecondaryToken []string          `protobuf:"bytes,2,rep,name=secondary_token,json=secondaryToken,proto3" json:"secondary_token,omitempty"`
	SubTokens      map[string]string `protobuf:"bytes,3,rep,name=sub_tokens,json=subTokens,proto3" json:"sub_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Indices        map[string]int32  `protobuf:"bytes,4,rep,name=indices,proto3" json:"indices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *PageToken) Reset() {
	*x = PageToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageToken) ProtoMessage() {}

func (x *PageToken) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageToken.ProtoReflect.Descriptor instead.
func (*PageToken) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{1}
}

func (x *PageToken) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PageToken) GetSecondaryToken() []string {
	if x != nil {
		return x.SecondaryToken
	}
	return nil
}

func (x *PageToken) GetSubTokens() map[string]string {
	if x != nil {
		return x.SubTokens
	}
	return nil
}

func (x *PageToken) GetIndices() map[string]int32 {
	if x != nil {
		return x.Indices
	}
	return nil
}

type CrossReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceDecoration *CrossReference_Decoration       `protobuf:"bytes,1,opt,name=source_decoration,json=sourceDecoration,proto3" json:"source_decoration,omitempty"`
	Referent         *serving_go_proto.Node           `protobuf:"bytes,2,opt,name=referent,proto3" json:"referent,omitempty"`
	TargetDecoration *CrossReference_Decoration       `protobuf:"bytes,3,opt,name=target_decoration,json=targetDecoration,proto3" json:"target_decoration,omitempty"`
	SourceAnchor     *serving_go_proto.ExpandedAnchor `protobuf:"bytes,4,opt,name=source_anchor,json=sourceAnchor,proto3" json:"source_anchor,omitempty"`
	TargetAnchor     *serving_go_proto.ExpandedAnchor `protobuf:"bytes,5,opt,name=target_anchor,json=targetAnchor,proto3" json:"target_anchor,omitempty"`
}

func (x *CrossReference) Reset() {
	*x = CrossReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReference) ProtoMessage() {}

func (x *CrossReference) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReference.ProtoReflect.Descriptor instead.
func (*CrossReference) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{2}
}

func (x *CrossReference) GetSourceDecoration() *CrossReference_Decoration {
	if x != nil {
		return x.SourceDecoration
	}
	return nil
}

func (x *CrossReference) GetReferent() *serving_go_proto.Node {
	if x != nil {
		return x.Referent
	}
	return nil
}

func (x *CrossReference) GetTargetDecoration() *CrossReference_Decoration {
	if x != nil {
		return x.TargetDecoration
	}
	return nil
}

func (x *CrossReference) GetSourceAnchor() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.SourceAnchor
	}
	return nil
}

func (x *CrossReference) GetTargetAnchor() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.TargetAnchor
	}
	return nil
}

type SortedKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SortKey string `protobuf:"bytes,2,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
	Value   []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SortedKeyValue) Reset() {
	*x = SortedKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortedKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortedKeyValue) ProtoMessage() {}

func (x *SortedKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortedKeyValue.ProtoReflect.Descriptor instead.
func (*SortedKeyValue) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{3}
}

func (x *SortedKeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SortedKeyValue) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *SortedKeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pivot *Path_Node   `protobuf:"bytes,1,opt,name=pivot,proto3" json:"pivot,omitempty"`
	Edges []*Path_Edge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{4}
}

func (x *Path) GetPivot() *Path_Node {
	if x != nil {
		return x.Pivot
	}
	return nil
}

func (x *Path) GetEdges() []*Path_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type Source_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket  string `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Ordinal int32  `protobuf:"varint,2,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
}

func (x *Source_Edge) Reset() {
	*x = Source_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source_Edge) ProtoMessage() {}

func (x *Source_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source_Edge.ProtoReflect.Descriptor instead.
func (*Source_Edge) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Source_Edge) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *Source_Edge) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

type Source_EdgeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edges []*Source_Edge `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *Source_EdgeGroup) Reset() {
	*x = Source_EdgeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source_EdgeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source_EdgeGroup) ProtoMessage() {}

func (x *Source_EdgeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source_EdgeGroup.ProtoReflect.Descriptor instead.
func (*Source_EdgeGroup) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Source_EdgeGroup) GetEdges() []*Source_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type CrossReference_Decoration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File   *serving_go_proto.File      `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Anchor *serving_go_proto.RawAnchor `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Kind   string                      `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *CrossReference_Decoration) Reset() {
	*x = CrossReference_Decoration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReference_Decoration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReference_Decoration) ProtoMessage() {}

func (x *CrossReference_Decoration) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReference_Decoration.ProtoReflect.Descriptor instead.
func (*CrossReference_Decoration) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CrossReference_Decoration) GetFile() *serving_go_proto.File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *CrossReference_Decoration) GetAnchor() *serving_go_proto.RawAnchor {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *CrossReference_Decoration) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type Path_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Specialization:
	//
	//	*Path_Node_RawAnchor
	//	*Path_Node_ExpandedAnchor
	//	*Path_Node_File
	Specialization isPath_Node_Specialization `protobuf_oneof:"specialization"`
	Ticket         string                     `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	NodeKind       string                     `protobuf:"bytes,2,opt,name=node_kind,json=nodeKind,proto3" json:"node_kind,omitempty"`
	Original       *serving_go_proto.Node     `protobuf:"bytes,3,opt,name=original,proto3" json:"original,omitempty"`
}

func (x *Path_Node) Reset() {
	*x = Path_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path_Node) ProtoMessage() {}

func (x *Path_Node) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path_Node.ProtoReflect.Descriptor instead.
func (*Path_Node) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{4, 0}
}

func (m *Path_Node) GetSpecialization() isPath_Node_Specialization {
	if m != nil {
		return m.Specialization
	}
	return nil
}

func (x *Path_Node) GetRawAnchor() *serving_go_proto.RawAnchor {
	if x, ok := x.GetSpecialization().(*Path_Node_RawAnchor); ok {
		return x.RawAnchor
	}
	return nil
}

func (x *Path_Node) GetExpandedAnchor() *serving_go_proto.ExpandedAnchor {
	if x, ok := x.GetSpecialization().(*Path_Node_ExpandedAnchor); ok {
		return x.ExpandedAnchor
	}
	return nil
}

func (x *Path_Node) GetFile() *serving_go_proto.File {
	if x, ok := x.GetSpecialization().(*Path_Node_File); ok {
		return x.File
	}
	return nil
}

func (x *Path_Node) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *Path_Node) GetNodeKind() string {
	if x != nil {
		return x.NodeKind
	}
	return ""
}

func (x *Path_Node) GetOriginal() *serving_go_proto.Node {
	if x != nil {
		return x.Original
	}
	return nil
}

type isPath_Node_Specialization interface {
	isPath_Node_Specialization()
}

type Path_Node_RawAnchor struct {
	RawAnchor *serving_go_proto.RawAnchor `protobuf:"bytes,10,opt,name=raw_anchor,json=rawAnchor,proto3,oneof"`
}

type Path_Node_ExpandedAnchor struct {
	ExpandedAnchor *serving_go_proto.ExpandedAnchor `protobuf:"bytes,11,opt,name=expanded_anchor,json=expandedAnchor,proto3,oneof"`
}

type Path_Node_File struct {
	File *serving_go_proto.File `protobuf:"bytes,12,opt,name=file,proto3,oneof"`
}

func (*Path_Node_RawAnchor) isPath_Node_Specialization() {}

func (*Path_Node_ExpandedAnchor) isPath_Node_Specialization() {}

func (*Path_Node_File) isPath_Node_Specialization() {}

type Path_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind    string     `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Ordinal int32      `protobuf:"varint,2,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Target  *Path_Node `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Path_Edge) Reset() {
	*x = Path_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_internal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path_Edge) ProtoMessage() {}

func (x *Path_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_internal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path_Edge.ProtoReflect.Descriptor instead.
func (*Path_Edge) Descriptor() ([]byte, []int) {
	return file_kythe_proto_internal_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Path_Edge) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Path_Edge) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *Path_Edge) GetTarget() *Path_Node {
	if x != nil {
		return x.Target
	}
	return nil
}

var File_kythe_proto_internal_proto protoreflect.FileDescriptor

var file_kythe_proto_internal_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b, 0x79,
	0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x1a, 0x19, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x03,
	0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x3d, 0x0a, 0x05, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x46, 0x61,
	0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x4d, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x38,
	0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x1a, 0x44, 0x0a, 0x09, 0x45, 0x64, 0x67, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x1a, 0x38,
	0x0a, 0x0a, 0x46, 0x61, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x65, 0x0a, 0x0f, 0x45, 0x64, 0x67, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b,
	0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xdb, 0x02, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x07, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b,
	0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x04,
	0x0a, 0x0e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x5c, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x79,
	0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x48, 0x0a,
	0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x65, 0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x1a, 0x87, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x63, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x77, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0x53, 0x0a, 0x0e, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x04, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x35, 0x0a, 0x05, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x1a, 0xc6, 0x02,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x2e, 0x52, 0x61, 0x77, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x09, 0x72, 0x61,
	0x77, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x35, 0x0a,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6d, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b,
	0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x34, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_kythe_proto_internal_proto_rawDescOnce sync.Once
	file_kythe_proto_internal_proto_rawDescData = file_kythe_proto_internal_proto_rawDesc
)

func file_kythe_proto_internal_proto_rawDescGZIP() []byte {
	file_kythe_proto_internal_proto_rawDescOnce.Do(func() {
		file_kythe_proto_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_kythe_proto_internal_proto_rawDescData)
	})
	return file_kythe_proto_internal_proto_rawDescData
}

var file_kythe_proto_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kythe_proto_internal_proto_goTypes = []interface{}{
	(*Source)(nil),                          // 0: kythe.proto.internal.Source
	(*PageToken)(nil),                       // 1: kythe.proto.internal.PageToken
	(*CrossReference)(nil),                  // 2: kythe.proto.internal.CrossReference
	(*SortedKeyValue)(nil),                  // 3: kythe.proto.internal.SortedKeyValue
	(*Path)(nil),                            // 4: kythe.proto.internal.Path
	(*Source_Edge)(nil),                     // 5: kythe.proto.internal.Source.Edge
	(*Source_EdgeGroup)(nil),                // 6: kythe.proto.internal.Source.EdgeGroup
	nil,                                     // 7: kythe.proto.internal.Source.FactsEntry
	nil,                                     // 8: kythe.proto.internal.Source.EdgeGroupsEntry
	nil,                                     // 9: kythe.proto.internal.PageToken.SubTokensEntry
	nil,                                     // 10: kythe.proto.internal.PageToken.IndicesEntry
	(*CrossReference_Decoration)(nil),       // 11: kythe.proto.internal.CrossReference.Decoration
	(*Path_Node)(nil),                       // 12: kythe.proto.internal.Path.Node
	(*Path_Edge)(nil),                       // 13: kythe.proto.internal.Path.Edge
	(*serving_go_proto.Node)(nil),           // 14: kythe.proto.serving.Node
	(*serving_go_proto.ExpandedAnchor)(nil), // 15: kythe.proto.serving.ExpandedAnchor
	(*serving_go_proto.File)(nil),           // 16: kythe.proto.serving.File
	(*serving_go_proto.RawAnchor)(nil),      // 17: kythe.proto.serving.RawAnchor
}
var file_kythe_proto_internal_proto_depIdxs = []int32{
	7,  // 0: kythe.proto.internal.Source.facts:type_name -> kythe.proto.internal.Source.FactsEntry
	8,  // 1: kythe.proto.internal.Source.edge_groups:type_name -> kythe.proto.internal.Source.EdgeGroupsEntry
	9,  // 2: kythe.proto.internal.PageToken.sub_tokens:type_name -> kythe.proto.internal.PageToken.SubTokensEntry
	10, // 3: kythe.proto.internal.PageToken.indices:type_name -> kythe.proto.internal.PageToken.IndicesEntry
	11, // 4: kythe.proto.internal.CrossReference.source_decoration:type_name -> kythe.proto.internal.CrossReference.Decoration
	14, // 5: kythe.proto.internal.CrossReference.referent:type_name -> kythe.proto.serving.Node
	11, // 6: kythe.proto.internal.CrossReference.target_decoration:type_name -> kythe.proto.internal.CrossReference.Decoration
	15, // 7: kythe.proto.internal.CrossReference.source_anchor:type_name -> kythe.proto.serving.ExpandedAnchor
	15, // 8: kythe.proto.internal.CrossReference.target_anchor:type_name -> kythe.proto.serving.ExpandedAnchor
	12, // 9: kythe.proto.internal.Path.pivot:type_name -> kythe.proto.internal.Path.Node
	13, // 10: kythe.proto.internal.Path.edges:type_name -> kythe.proto.internal.Path.Edge
	5,  // 11: kythe.proto.internal.Source.EdgeGroup.edges:type_name -> kythe.proto.internal.Source.Edge
	6,  // 12: kythe.proto.internal.Source.EdgeGroupsEntry.value:type_name -> kythe.proto.internal.Source.EdgeGroup
	16, // 13: kythe.proto.internal.CrossReference.Decoration.file:type_name -> kythe.proto.serving.File
	17, // 14: kythe.proto.internal.CrossReference.Decoration.anchor:type_name -> kythe.proto.serving.RawAnchor
	17, // 15: kythe.proto.internal.Path.Node.raw_anchor:type_name -> kythe.proto.serving.RawAnchor
	15, // 16: kythe.proto.internal.Path.Node.expanded_anchor:type_name -> kythe.proto.serving.ExpandedAnchor
	16, // 17: kythe.proto.internal.Path.Node.file:type_name -> kythe.proto.serving.File
	14, // 18: kythe.proto.internal.Path.Node.original:type_name -> kythe.proto.serving.Node
	12, // 19: kythe.proto.internal.Path.Edge.target:type_name -> kythe.proto.internal.Path.Node
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_kythe_proto_internal_proto_init() }
func file_kythe_proto_internal_proto_init() {
	if File_kythe_proto_internal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kythe_proto_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortedKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source_EdgeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReference_Decoration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_internal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kythe_proto_internal_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Path_Node_RawAnchor)(nil),
		(*Path_Node_ExpandedAnchor)(nil),
		(*Path_Node_File)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kythe_proto_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kythe_proto_internal_proto_goTypes,
		DependencyIndexes: file_kythe_proto_internal_proto_depIdxs,
		MessageInfos:      file_kythe_proto_internal_proto_msgTypes,
	}.Build()
	File_kythe_proto_internal_proto = out.File
	file_kythe_proto_internal_proto_rawDesc = nil
	file_kythe_proto_internal_proto_goTypes = nil
	file_kythe_proto_internal_proto_depIdxs = nil
}
