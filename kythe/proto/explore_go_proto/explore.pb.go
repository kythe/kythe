// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: kythe/proto/explore.proto

package explore_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common_go_proto "kythe.io/kythe/proto/common_go_proto"
	storage_go_proto "kythe.io/kythe/proto/storage_go_proto"
	xref_go_proto "kythe.io/kythe/proto/xref_go_proto"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind             string                        `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Subkind          string                        `protobuf:"bytes,2,opt,name=subkind,proto3" json:"subkind,omitempty"`
	Locations        []*xref_go_proto.Location     `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	DefinitionAnchor string                        `protobuf:"bytes,4,opt,name=definition_anchor,json=definitionAnchor,proto3" json:"definition_anchor,omitempty"`
	Code             *common_go_proto.MarkedSource `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *NodeData) Reset() {
	*x = NodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeData) ProtoMessage() {}

func (x *NodeData) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeData.ProtoReflect.Descriptor instead.
func (*NodeData) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{0}
}

func (x *NodeData) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *NodeData) GetSubkind() string {
	if x != nil {
		return x.Subkind
	}
	return ""
}

func (x *NodeData) GetLocations() []*xref_go_proto.Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *NodeData) GetDefinitionAnchor() string {
	if x != nil {
		return x.DefinitionAnchor
	}
	return ""
}

func (x *NodeData) GetCode() *common_go_proto.MarkedSource {
	if x != nil {
		return x.Code
	}
	return nil
}

type GraphNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeData     *NodeData `protobuf:"bytes,1,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
	Predecessors []string  `protobuf:"bytes,2,rep,name=predecessors,proto3" json:"predecessors,omitempty"`
	Successors   []string  `protobuf:"bytes,3,rep,name=successors,proto3" json:"successors,omitempty"`
}

func (x *GraphNode) Reset() {
	*x = GraphNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphNode) ProtoMessage() {}

func (x *GraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphNode.ProtoReflect.Descriptor instead.
func (*GraphNode) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{1}
}

func (x *GraphNode) GetNodeData() *NodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

func (x *GraphNode) GetPredecessors() []string {
	if x != nil {
		return x.Predecessors
	}
	return nil
}

func (x *GraphNode) GetSuccessors() []string {
	if x != nil {
		return x.Successors
	}
	return nil
}

type Graph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Graph) Reset() {
	*x = Graph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{2}
}

func (x *Graph) GetNodes() map[string]*GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type NodeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludedLanguages []string                  `protobuf:"bytes,1,rep,name=included_languages,json=includedLanguages,proto3" json:"included_languages,omitempty"`
	IncludedFiles     []*storage_go_proto.VName `protobuf:"bytes,2,rep,name=included_files,json=includedFiles,proto3" json:"included_files,omitempty"`
}

func (x *NodeFilter) Reset() {
	*x = NodeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeFilter) ProtoMessage() {}

func (x *NodeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeFilter.ProtoReflect.Descriptor instead.
func (*NodeFilter) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{3}
}

func (x *NodeFilter) GetIncludedLanguages() []string {
	if x != nil {
		return x.IncludedLanguages
	}
	return nil
}

func (x *NodeFilter) GetIncludedFiles() []*storage_go_proto.VName {
	if x != nil {
		return x.IncludedFiles
	}
	return nil
}

type Tickets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []string `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *Tickets) Reset() {
	*x = Tickets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tickets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tickets) ProtoMessage() {}

func (x *Tickets) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tickets.ProtoReflect.Descriptor instead.
func (*Tickets) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{4}
}

func (x *Tickets) GetTickets() []string {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type TypeHierarchyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeTicket string      `protobuf:"bytes,1,opt,name=type_ticket,json=typeTicket,proto3" json:"type_ticket,omitempty"`
	NodeFilter *NodeFilter `protobuf:"bytes,2,opt,name=node_filter,json=nodeFilter,proto3" json:"node_filter,omitempty"`
}

func (x *TypeHierarchyRequest) Reset() {
	*x = TypeHierarchyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeHierarchyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeHierarchyRequest) ProtoMessage() {}

func (x *TypeHierarchyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeHierarchyRequest.ProtoReflect.Descriptor instead.
func (*TypeHierarchyRequest) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{5}
}

func (x *TypeHierarchyRequest) GetTypeTicket() string {
	if x != nil {
		return x.TypeTicket
	}
	return ""
}

func (x *TypeHierarchyRequest) GetNodeFilter() *NodeFilter {
	if x != nil {
		return x.NodeFilter
	}
	return nil
}

type TypeHierarchyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeTicket string `protobuf:"bytes,1,opt,name=type_ticket,json=typeTicket,proto3" json:"type_ticket,omitempty"`
	Graph      *Graph `protobuf:"bytes,2,opt,name=graph,proto3" json:"graph,omitempty"`
}

func (x *TypeHierarchyReply) Reset() {
	*x = TypeHierarchyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeHierarchyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeHierarchyReply) ProtoMessage() {}

func (x *TypeHierarchyReply) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeHierarchyReply.ProtoReflect.Descriptor instead.
func (*TypeHierarchyReply) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{6}
}

func (x *TypeHierarchyReply) GetTypeTicket() string {
	if x != nil {
		return x.TypeTicket
	}
	return ""
}

func (x *TypeHierarchyReply) GetGraph() *Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

type CallersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []string `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *CallersRequest) Reset() {
	*x = CallersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallersRequest) ProtoMessage() {}

func (x *CallersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallersRequest.ProtoReflect.Descriptor instead.
func (*CallersRequest) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{7}
}

func (x *CallersRequest) GetTickets() []string {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type CallersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph *Graph `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
}

func (x *CallersReply) Reset() {
	*x = CallersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallersReply) ProtoMessage() {}

func (x *CallersReply) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallersReply.ProtoReflect.Descriptor instead.
func (*CallersReply) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{8}
}

func (x *CallersReply) GetGraph() *Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

type CalleesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []string `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *CalleesRequest) Reset() {
	*x = CalleesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalleesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalleesRequest) ProtoMessage() {}

func (x *CalleesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalleesRequest.ProtoReflect.Descriptor instead.
func (*CalleesRequest) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{9}
}

func (x *CalleesRequest) GetTickets() []string {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type CalleesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph *Graph `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
}

func (x *CalleesReply) Reset() {
	*x = CalleesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalleesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalleesReply) ProtoMessage() {}

func (x *CalleesReply) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalleesReply.ProtoReflect.Descriptor instead.
func (*CalleesReply) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{10}
}

func (x *CalleesReply) GetGraph() *Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

type ParametersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionTickets []string `protobuf:"bytes,1,rep,name=function_tickets,json=functionTickets,proto3" json:"function_tickets,omitempty"`
}

func (x *ParametersRequest) Reset() {
	*x = ParametersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersRequest) ProtoMessage() {}

func (x *ParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersRequest.ProtoReflect.Descriptor instead.
func (*ParametersRequest) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{11}
}

func (x *ParametersRequest) GetFunctionTickets() []string {
	if x != nil {
		return x.FunctionTickets
	}
	return nil
}

type ParametersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionToParameters  map[string]*Tickets  `protobuf:"bytes,1,rep,name=function_to_parameters,json=functionToParameters,proto3" json:"function_to_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FunctionToReturnValue map[string]string    `protobuf:"bytes,2,rep,name=function_to_return_value,json=functionToReturnValue,proto3" json:"function_to_return_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeData              map[string]*NodeData `protobuf:"bytes,3,rep,name=node_data,json=nodeData,proto3" json:"node_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ParametersReply) Reset() {
	*x = ParametersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersReply) ProtoMessage() {}

func (x *ParametersReply) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersReply.ProtoReflect.Descriptor instead.
func (*ParametersReply) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{12}
}

func (x *ParametersReply) GetFunctionToParameters() map[string]*Tickets {
	if x != nil {
		return x.FunctionToParameters
	}
	return nil
}

func (x *ParametersReply) GetFunctionToReturnValue() map[string]string {
	if x != nil {
		return x.FunctionToReturnValue
	}
	return nil
}

func (x *ParametersReply) GetNodeData() map[string]*NodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

type ParentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []string `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *ParentsRequest) Reset() {
	*x = ParentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentsRequest) ProtoMessage() {}

func (x *ParentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentsRequest.ProtoReflect.Descriptor instead.
func (*ParentsRequest) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{13}
}

func (x *ParentsRequest) GetTickets() []string {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type ParentsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputToParents map[string]*Tickets `protobuf:"bytes,1,rep,name=input_to_parents,json=inputToParents,proto3" json:"input_to_parents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ParentsReply) Reset() {
	*x = ParentsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentsReply) ProtoMessage() {}

func (x *ParentsReply) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentsReply.ProtoReflect.Descriptor instead.
func (*ParentsReply) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{14}
}

func (x *ParentsReply) GetInputToParents() map[string]*Tickets {
	if x != nil {
		return x.InputToParents
	}
	return nil
}

type ChildrenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []string `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *ChildrenRequest) Reset() {
	*x = ChildrenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenRequest) ProtoMessage() {}

func (x *ChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenRequest.ProtoReflect.Descriptor instead.
func (*ChildrenRequest) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{15}
}

func (x *ChildrenRequest) GetTickets() []string {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type ChildrenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputToChildren map[string]*Tickets `protobuf:"bytes,1,rep,name=input_to_children,json=inputToChildren,proto3" json:"input_to_children,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ChildrenReply) Reset() {
	*x = ChildrenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_explore_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenReply) ProtoMessage() {}

func (x *ChildrenReply) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_explore_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenReply.ProtoReflect.Descriptor instead.
func (*ChildrenReply) Descriptor() ([]byte, []int) {
	return file_kythe_proto_explore_proto_rawDescGZIP(), []int{16}
}

func (x *ChildrenReply) GetInputToChildren() map[string]*Tickets {
	if x != nil {
		return x.InputToChildren
	}
	return nil
}

var File_kythe_proto_explore_proto protoreflect.FileDescriptor

var file_kythe_proto_explore_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78,
	0x70, 0x6c, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6b,
	0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x72, 0x65, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x33, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x09, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x33, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x50, 0x0a,
	0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x76, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x14,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x5f, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x22, 0x2a, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x0c,
	0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x05,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79,
	0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52,
	0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x22, 0x2a, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x38, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x22, 0x3e, 0x0a, 0x11,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xb7, 0x04, 0x0a,
	0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x6c, 0x0a, 0x16, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x70,
	0x0a, 0x18, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x47, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x5d, 0x0a, 0x19, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x48, 0x0a, 0x1a, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x52, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2a, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x6f,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x57, 0x0a, 0x13,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x11, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f,
	0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x54, 0x6f, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x1a, 0x58, 0x0a, 0x14, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xcc, 0x03, 0x0a, 0x0e,
	0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x07, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x73, 0x12, 0x1b,
	0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x79,
	0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x48, 0x69, 0x65,
	0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x12, 0x21, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63,
	0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x69, 0x65, 0x72,
	0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x35, 0x0a, 0x1f, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x10, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kythe_proto_explore_proto_rawDescOnce sync.Once
	file_kythe_proto_explore_proto_rawDescData = file_kythe_proto_explore_proto_rawDesc
)

func file_kythe_proto_explore_proto_rawDescGZIP() []byte {
	file_kythe_proto_explore_proto_rawDescOnce.Do(func() {
		file_kythe_proto_explore_proto_rawDescData = protoimpl.X.CompressGZIP(file_kythe_proto_explore_proto_rawDescData)
	})
	return file_kythe_proto_explore_proto_rawDescData
}

var file_kythe_proto_explore_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_kythe_proto_explore_proto_goTypes = []interface{}{
	(*NodeData)(nil),                     // 0: kythe.proto.NodeData
	(*GraphNode)(nil),                    // 1: kythe.proto.GraphNode
	(*Graph)(nil),                        // 2: kythe.proto.Graph
	(*NodeFilter)(nil),                   // 3: kythe.proto.NodeFilter
	(*Tickets)(nil),                      // 4: kythe.proto.Tickets
	(*TypeHierarchyRequest)(nil),         // 5: kythe.proto.TypeHierarchyRequest
	(*TypeHierarchyReply)(nil),           // 6: kythe.proto.TypeHierarchyReply
	(*CallersRequest)(nil),               // 7: kythe.proto.CallersRequest
	(*CallersReply)(nil),                 // 8: kythe.proto.CallersReply
	(*CalleesRequest)(nil),               // 9: kythe.proto.CalleesRequest
	(*CalleesReply)(nil),                 // 10: kythe.proto.CalleesReply
	(*ParametersRequest)(nil),            // 11: kythe.proto.ParametersRequest
	(*ParametersReply)(nil),              // 12: kythe.proto.ParametersReply
	(*ParentsRequest)(nil),               // 13: kythe.proto.ParentsRequest
	(*ParentsReply)(nil),                 // 14: kythe.proto.ParentsReply
	(*ChildrenRequest)(nil),              // 15: kythe.proto.ChildrenRequest
	(*ChildrenReply)(nil),                // 16: kythe.proto.ChildrenReply
	nil,                                  // 17: kythe.proto.Graph.NodesEntry
	nil,                                  // 18: kythe.proto.ParametersReply.FunctionToParametersEntry
	nil,                                  // 19: kythe.proto.ParametersReply.FunctionToReturnValueEntry
	nil,                                  // 20: kythe.proto.ParametersReply.NodeDataEntry
	nil,                                  // 21: kythe.proto.ParentsReply.InputToParentsEntry
	nil,                                  // 22: kythe.proto.ChildrenReply.InputToChildrenEntry
	(*xref_go_proto.Location)(nil),       // 23: kythe.proto.Location
	(*common_go_proto.MarkedSource)(nil), // 24: kythe.proto.common.MarkedSource
	(*storage_go_proto.VName)(nil),       // 25: kythe.proto.VName
}
var file_kythe_proto_explore_proto_depIdxs = []int32{
	23, // 0: kythe.proto.NodeData.locations:type_name -> kythe.proto.Location
	24, // 1: kythe.proto.NodeData.code:type_name -> kythe.proto.common.MarkedSource
	0,  // 2: kythe.proto.GraphNode.node_data:type_name -> kythe.proto.NodeData
	17, // 3: kythe.proto.Graph.nodes:type_name -> kythe.proto.Graph.NodesEntry
	25, // 4: kythe.proto.NodeFilter.included_files:type_name -> kythe.proto.VName
	3,  // 5: kythe.proto.TypeHierarchyRequest.node_filter:type_name -> kythe.proto.NodeFilter
	2,  // 6: kythe.proto.TypeHierarchyReply.graph:type_name -> kythe.proto.Graph
	2,  // 7: kythe.proto.CallersReply.graph:type_name -> kythe.proto.Graph
	2,  // 8: kythe.proto.CalleesReply.graph:type_name -> kythe.proto.Graph
	18, // 9: kythe.proto.ParametersReply.function_to_parameters:type_name -> kythe.proto.ParametersReply.FunctionToParametersEntry
	19, // 10: kythe.proto.ParametersReply.function_to_return_value:type_name -> kythe.proto.ParametersReply.FunctionToReturnValueEntry
	20, // 11: kythe.proto.ParametersReply.node_data:type_name -> kythe.proto.ParametersReply.NodeDataEntry
	21, // 12: kythe.proto.ParentsReply.input_to_parents:type_name -> kythe.proto.ParentsReply.InputToParentsEntry
	22, // 13: kythe.proto.ChildrenReply.input_to_children:type_name -> kythe.proto.ChildrenReply.InputToChildrenEntry
	1,  // 14: kythe.proto.Graph.NodesEntry.value:type_name -> kythe.proto.GraphNode
	4,  // 15: kythe.proto.ParametersReply.FunctionToParametersEntry.value:type_name -> kythe.proto.Tickets
	0,  // 16: kythe.proto.ParametersReply.NodeDataEntry.value:type_name -> kythe.proto.NodeData
	4,  // 17: kythe.proto.ParentsReply.InputToParentsEntry.value:type_name -> kythe.proto.Tickets
	4,  // 18: kythe.proto.ChildrenReply.InputToChildrenEntry.value:type_name -> kythe.proto.Tickets
	7,  // 19: kythe.proto.ExploreService.Callers:input_type -> kythe.proto.CallersRequest
	9,  // 20: kythe.proto.ExploreService.Callees:input_type -> kythe.proto.CalleesRequest
	13, // 21: kythe.proto.ExploreService.Parents:input_type -> kythe.proto.ParentsRequest
	15, // 22: kythe.proto.ExploreService.Children:input_type -> kythe.proto.ChildrenRequest
	5,  // 23: kythe.proto.ExploreService.TypeHierarchy:input_type -> kythe.proto.TypeHierarchyRequest
	11, // 24: kythe.proto.ExploreService.Parameters:input_type -> kythe.proto.ParametersRequest
	8,  // 25: kythe.proto.ExploreService.Callers:output_type -> kythe.proto.CallersReply
	10, // 26: kythe.proto.ExploreService.Callees:output_type -> kythe.proto.CalleesReply
	14, // 27: kythe.proto.ExploreService.Parents:output_type -> kythe.proto.ParentsReply
	16, // 28: kythe.proto.ExploreService.Children:output_type -> kythe.proto.ChildrenReply
	6,  // 29: kythe.proto.ExploreService.TypeHierarchy:output_type -> kythe.proto.TypeHierarchyReply
	12, // 30: kythe.proto.ExploreService.Parameters:output_type -> kythe.proto.ParametersReply
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_kythe_proto_explore_proto_init() }
func file_kythe_proto_explore_proto_init() {
	if File_kythe_proto_explore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kythe_proto_explore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Graph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tickets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeHierarchyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeHierarchyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalleesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalleesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_explore_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kythe_proto_explore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kythe_proto_explore_proto_goTypes,
		DependencyIndexes: file_kythe_proto_explore_proto_depIdxs,
		MessageInfos:      file_kythe_proto_explore_proto_msgTypes,
	}.Build()
	File_kythe_proto_explore_proto = out.File
	file_kythe_proto_explore_proto_rawDesc = nil
	file_kythe_proto_explore_proto_goTypes = nil
	file_kythe_proto_explore_proto_depIdxs = nil
}
