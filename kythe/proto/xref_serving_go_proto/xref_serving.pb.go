// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: kythe/proto/xref_serving.proto

package xref_serving_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common_go_proto "kythe.io/kythe/proto/common_go_proto"
	schema_go_proto "kythe.io/kythe/proto/schema_go_proto"
	serving_go_proto "kythe.io/kythe/proto/serving_go_proto"
	storage_go_proto "kythe.io/kythe/proto/storage_go_proto"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrossReferences_Callsite_Kind int32

const (
	CrossReferences_Callsite_UNKNOWN  CrossReferences_Callsite_Kind = 0
	CrossReferences_Callsite_DIRECT   CrossReferences_Callsite_Kind = 1
	CrossReferences_Callsite_OVERRIDE CrossReferences_Callsite_Kind = 2
)

// Enum value maps for CrossReferences_Callsite_Kind.
var (
	CrossReferences_Callsite_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "DIRECT",
		2: "OVERRIDE",
	}
	CrossReferences_Callsite_Kind_value = map[string]int32{
		"UNKNOWN":  0,
		"DIRECT":   1,
		"OVERRIDE": 2,
	}
)

func (x CrossReferences_Callsite_Kind) Enum() *CrossReferences_Callsite_Kind {
	p := new(CrossReferences_Callsite_Kind)
	*p = x
	return p
}

func (x CrossReferences_Callsite_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrossReferences_Callsite_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_kythe_proto_xref_serving_proto_enumTypes[0].Descriptor()
}

func (CrossReferences_Callsite_Kind) Type() protoreflect.EnumType {
	return &file_kythe_proto_xref_serving_proto_enumTypes[0]
}

func (x CrossReferences_Callsite_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrossReferences_Callsite_Kind.Descriptor instead.
func (CrossReferences_Callsite_Kind) EnumDescriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 4, 0}
}

type FileDecorations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *storage_go_proto.VName `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// Types that are assignable to Entry:
	//
	//	*FileDecorations_Index_
	//	*FileDecorations_Text_
	//	*FileDecorations_Target_
	//	*FileDecorations_TargetOverride_
	//	*FileDecorations_TargetNode_
	//	*FileDecorations_TargetDefinition_
	//	*FileDecorations_DefinitionLocation_
	//	*FileDecorations_Override_
	//	*FileDecorations_Diagnostic_
	Entry isFileDecorations_Entry `protobuf_oneof:"entry"`
}

func (x *FileDecorations) Reset() {
	*x = FileDecorations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations) ProtoMessage() {}

func (x *FileDecorations) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations.ProtoReflect.Descriptor instead.
func (*FileDecorations) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0}
}

func (x *FileDecorations) GetFile() *storage_go_proto.VName {
	if x != nil {
		return x.File
	}
	return nil
}

func (m *FileDecorations) GetEntry() isFileDecorations_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *FileDecorations) GetIndex() *FileDecorations_Index {
	if x, ok := x.GetEntry().(*FileDecorations_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *FileDecorations) GetText() *FileDecorations_Text {
	if x, ok := x.GetEntry().(*FileDecorations_Text_); ok {
		return x.Text
	}
	return nil
}

func (x *FileDecorations) GetTarget() *FileDecorations_Target {
	if x, ok := x.GetEntry().(*FileDecorations_Target_); ok {
		return x.Target
	}
	return nil
}

func (x *FileDecorations) GetTargetOverride() *FileDecorations_TargetOverride {
	if x, ok := x.GetEntry().(*FileDecorations_TargetOverride_); ok {
		return x.TargetOverride
	}
	return nil
}

func (x *FileDecorations) GetTargetNode() *FileDecorations_TargetNode {
	if x, ok := x.GetEntry().(*FileDecorations_TargetNode_); ok {
		return x.TargetNode
	}
	return nil
}

func (x *FileDecorations) GetTargetDefinition() *FileDecorations_TargetDefinition {
	if x, ok := x.GetEntry().(*FileDecorations_TargetDefinition_); ok {
		return x.TargetDefinition
	}
	return nil
}

func (x *FileDecorations) GetDefinitionLocation() *FileDecorations_DefinitionLocation {
	if x, ok := x.GetEntry().(*FileDecorations_DefinitionLocation_); ok {
		return x.DefinitionLocation
	}
	return nil
}

func (x *FileDecorations) GetOverride() *FileDecorations_Override {
	if x, ok := x.GetEntry().(*FileDecorations_Override_); ok {
		return x.Override
	}
	return nil
}

func (x *FileDecorations) GetDiagnostic() *FileDecorations_Diagnostic {
	if x, ok := x.GetEntry().(*FileDecorations_Diagnostic_); ok {
		return x.Diagnostic
	}
	return nil
}

type isFileDecorations_Entry interface {
	isFileDecorations_Entry()
}

type FileDecorations_Index_ struct {
	Index *FileDecorations_Index `protobuf:"bytes,2,opt,name=index,proto3,oneof"`
}

type FileDecorations_Text_ struct {
	Text *FileDecorations_Text `protobuf:"bytes,3,opt,name=text,proto3,oneof"`
}

type FileDecorations_Target_ struct {
	Target *FileDecorations_Target `protobuf:"bytes,4,opt,name=target,proto3,oneof"`
}

type FileDecorations_TargetOverride_ struct {
	TargetOverride *FileDecorations_TargetOverride `protobuf:"bytes,5,opt,name=target_override,json=targetOverride,proto3,oneof"`
}

type FileDecorations_TargetNode_ struct {
	TargetNode *FileDecorations_TargetNode `protobuf:"bytes,6,opt,name=target_node,json=targetNode,proto3,oneof"`
}

type FileDecorations_TargetDefinition_ struct {
	TargetDefinition *FileDecorations_TargetDefinition `protobuf:"bytes,7,opt,name=target_definition,json=targetDefinition,proto3,oneof"`
}

type FileDecorations_DefinitionLocation_ struct {
	DefinitionLocation *FileDecorations_DefinitionLocation `protobuf:"bytes,8,opt,name=definition_location,json=definitionLocation,proto3,oneof"`
}

type FileDecorations_Override_ struct {
	Override *FileDecorations_Override `protobuf:"bytes,9,opt,name=override,proto3,oneof"`
}

type FileDecorations_Diagnostic_ struct {
	Diagnostic *FileDecorations_Diagnostic `protobuf:"bytes,10,opt,name=diagnostic,proto3,oneof"`
}

func (*FileDecorations_Index_) isFileDecorations_Entry() {}

func (*FileDecorations_Text_) isFileDecorations_Entry() {}

func (*FileDecorations_Target_) isFileDecorations_Entry() {}

func (*FileDecorations_TargetOverride_) isFileDecorations_Entry() {}

func (*FileDecorations_TargetNode_) isFileDecorations_Entry() {}

func (*FileDecorations_TargetDefinition_) isFileDecorations_Entry() {}

func (*FileDecorations_DefinitionLocation_) isFileDecorations_Entry() {}

func (*FileDecorations_Override_) isFileDecorations_Entry() {}

func (*FileDecorations_Diagnostic_) isFileDecorations_Entry() {}

type CrossReferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *storage_go_proto.VName `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Types that are assignable to Entry:
	//
	//	*CrossReferences_Index_
	//	*CrossReferences_Reference_
	//	*CrossReferences_Relation_
	//	*CrossReferences_Caller_
	//	*CrossReferences_Callsite_
	//	*CrossReferences_RelatedNode_
	//	*CrossReferences_NodeDefinition_
	Entry isCrossReferences_Entry `protobuf_oneof:"entry"`
}

func (x *CrossReferences) Reset() {
	*x = CrossReferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences) ProtoMessage() {}

func (x *CrossReferences) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences.ProtoReflect.Descriptor instead.
func (*CrossReferences) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1}
}

func (x *CrossReferences) GetSource() *storage_go_proto.VName {
	if x != nil {
		return x.Source
	}
	return nil
}

func (m *CrossReferences) GetEntry() isCrossReferences_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *CrossReferences) GetIndex() *CrossReferences_Index {
	if x, ok := x.GetEntry().(*CrossReferences_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *CrossReferences) GetReference() *CrossReferences_Reference {
	if x, ok := x.GetEntry().(*CrossReferences_Reference_); ok {
		return x.Reference
	}
	return nil
}

func (x *CrossReferences) GetRelation() *CrossReferences_Relation {
	if x, ok := x.GetEntry().(*CrossReferences_Relation_); ok {
		return x.Relation
	}
	return nil
}

func (x *CrossReferences) GetCaller() *CrossReferences_Caller {
	if x, ok := x.GetEntry().(*CrossReferences_Caller_); ok {
		return x.Caller
	}
	return nil
}

func (x *CrossReferences) GetCallsite() *CrossReferences_Callsite {
	if x, ok := x.GetEntry().(*CrossReferences_Callsite_); ok {
		return x.Callsite
	}
	return nil
}

func (x *CrossReferences) GetRelatedNode() *CrossReferences_RelatedNode {
	if x, ok := x.GetEntry().(*CrossReferences_RelatedNode_); ok {
		return x.RelatedNode
	}
	return nil
}

func (x *CrossReferences) GetNodeDefinition() *CrossReferences_NodeDefinition {
	if x, ok := x.GetEntry().(*CrossReferences_NodeDefinition_); ok {
		return x.NodeDefinition
	}
	return nil
}

type isCrossReferences_Entry interface {
	isCrossReferences_Entry()
}

type CrossReferences_Index_ struct {
	Index *CrossReferences_Index `protobuf:"bytes,2,opt,name=index,proto3,oneof"`
}

type CrossReferences_Reference_ struct {
	Reference *CrossReferences_Reference `protobuf:"bytes,3,opt,name=reference,proto3,oneof"`
}

type CrossReferences_Relation_ struct {
	Relation *CrossReferences_Relation `protobuf:"bytes,4,opt,name=relation,proto3,oneof"`
}

type CrossReferences_Caller_ struct {
	Caller *CrossReferences_Caller `protobuf:"bytes,5,opt,name=caller,proto3,oneof"`
}

type CrossReferences_Callsite_ struct {
	Callsite *CrossReferences_Callsite `protobuf:"bytes,6,opt,name=callsite,proto3,oneof"`
}

type CrossReferences_RelatedNode_ struct {
	RelatedNode *CrossReferences_RelatedNode `protobuf:"bytes,7,opt,name=related_node,json=relatedNode,proto3,oneof"`
}

type CrossReferences_NodeDefinition_ struct {
	NodeDefinition *CrossReferences_NodeDefinition `protobuf:"bytes,8,opt,name=node_definition,json=nodeDefinition,proto3,oneof"`
}

func (*CrossReferences_Index_) isCrossReferences_Entry() {}

func (*CrossReferences_Reference_) isCrossReferences_Entry() {}

func (*CrossReferences_Relation_) isCrossReferences_Entry() {}

func (*CrossReferences_Caller_) isCrossReferences_Entry() {}

func (*CrossReferences_Callsite_) isCrossReferences_Entry() {}

func (*CrossReferences_RelatedNode_) isCrossReferences_Entry() {}

func (*CrossReferences_NodeDefinition_) isCrossReferences_Entry() {}

type FileDecorations_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextEncoding string `protobuf:"bytes,1,opt,name=text_encoding,json=textEncoding,proto3" json:"text_encoding,omitempty"`
}

func (x *FileDecorations_Index) Reset() {
	*x = FileDecorations_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_Index) ProtoMessage() {}

func (x *FileDecorations_Index) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_Index.ProtoReflect.Descriptor instead.
func (*FileDecorations_Index) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FileDecorations_Index) GetTextEncoding() string {
	if x != nil {
		return x.TextEncoding
	}
	return ""
}

type FileDecorations_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartOffset int32  `protobuf:"varint,1,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset   int32  `protobuf:"varint,2,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	Text        []byte `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *FileDecorations_Text) Reset() {
	*x = FileDecorations_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_Text) ProtoMessage() {}

func (x *FileDecorations_Text) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_Text.ProtoReflect.Descriptor instead.
func (*FileDecorations_Text) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 1}
}

func (x *FileDecorations_Text) GetStartOffset() int32 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *FileDecorations_Text) GetEndOffset() int32 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

func (x *FileDecorations_Text) GetText() []byte {
	if x != nil {
		return x.Text
	}
	return nil
}

type FileDecorations_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartOffset int32 `protobuf:"varint,1,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset   int32 `protobuf:"varint,2,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	// Types that are assignable to Kind:
	//
	//	*FileDecorations_Target_KytheKind
	//	*FileDecorations_Target_GenericKind
	Kind        isFileDecorations_Target_Kind `protobuf_oneof:"kind"`
	Target      *storage_go_proto.VName       `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	BuildConfig string                        `protobuf:"bytes,6,opt,name=build_config,json=buildConfig,proto3" json:"build_config,omitempty"`
}

func (x *FileDecorations_Target) Reset() {
	*x = FileDecorations_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_Target) ProtoMessage() {}

func (x *FileDecorations_Target) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_Target.ProtoReflect.Descriptor instead.
func (*FileDecorations_Target) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 2}
}

func (x *FileDecorations_Target) GetStartOffset() int32 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *FileDecorations_Target) GetEndOffset() int32 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

func (m *FileDecorations_Target) GetKind() isFileDecorations_Target_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *FileDecorations_Target) GetKytheKind() schema_go_proto.EdgeKind {
	if x, ok := x.GetKind().(*FileDecorations_Target_KytheKind); ok {
		return x.KytheKind
	}
	return schema_go_proto.EdgeKind(0)
}

func (x *FileDecorations_Target) GetGenericKind() string {
	if x, ok := x.GetKind().(*FileDecorations_Target_GenericKind); ok {
		return x.GenericKind
	}
	return ""
}

func (x *FileDecorations_Target) GetTarget() *storage_go_proto.VName {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *FileDecorations_Target) GetBuildConfig() string {
	if x != nil {
		return x.BuildConfig
	}
	return ""
}

type isFileDecorations_Target_Kind interface {
	isFileDecorations_Target_Kind()
}

type FileDecorations_Target_KytheKind struct {
	KytheKind schema_go_proto.EdgeKind `protobuf:"varint,3,opt,name=kythe_kind,json=kytheKind,proto3,enum=kythe.proto.schema.EdgeKind,oneof"`
}

type FileDecorations_Target_GenericKind struct {
	GenericKind string `protobuf:"bytes,4,opt,name=generic_kind,json=genericKind,proto3,oneof"`
}

func (*FileDecorations_Target_KytheKind) isFileDecorations_Target_Kind() {}

func (*FileDecorations_Target_GenericKind) isFileDecorations_Target_Kind() {}

type FileDecorations_TargetOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overridden           *storage_go_proto.VName                        `protobuf:"bytes,1,opt,name=overridden,proto3" json:"overridden,omitempty"`
	Kind                 serving_go_proto.FileDecorations_Override_Kind `protobuf:"varint,2,opt,name=kind,proto3,enum=kythe.proto.serving.FileDecorations_Override_Kind" json:"kind,omitempty"`
	Overriding           *storage_go_proto.VName                        `protobuf:"bytes,3,opt,name=overriding,proto3" json:"overriding,omitempty"`
	OverridingDefinition *serving_go_proto.ExpandedAnchor               `protobuf:"bytes,4,opt,name=overriding_definition,json=overridingDefinition,proto3" json:"overriding_definition,omitempty"`
}

func (x *FileDecorations_TargetOverride) Reset() {
	*x = FileDecorations_TargetOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_TargetOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_TargetOverride) ProtoMessage() {}

func (x *FileDecorations_TargetOverride) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_TargetOverride.ProtoReflect.Descriptor instead.
func (*FileDecorations_TargetOverride) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 3}
}

func (x *FileDecorations_TargetOverride) GetOverridden() *storage_go_proto.VName {
	if x != nil {
		return x.Overridden
	}
	return nil
}

func (x *FileDecorations_TargetOverride) GetKind() serving_go_proto.FileDecorations_Override_Kind {
	if x != nil {
		return x.Kind
	}
	return serving_go_proto.FileDecorations_Override_Kind(0)
}

func (x *FileDecorations_TargetOverride) GetOverriding() *storage_go_proto.VName {
	if x != nil {
		return x.Overriding
	}
	return nil
}

func (x *FileDecorations_TargetOverride) GetOverridingDefinition() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.OverridingDefinition
	}
	return nil
}

type FileDecorations_TargetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *schema_go_proto.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *FileDecorations_TargetNode) Reset() {
	*x = FileDecorations_TargetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_TargetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_TargetNode) ProtoMessage() {}

func (x *FileDecorations_TargetNode) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_TargetNode.ProtoReflect.Descriptor instead.
func (*FileDecorations_TargetNode) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 4}
}

func (x *FileDecorations_TargetNode) GetNode() *schema_go_proto.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type FileDecorations_TargetDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     *storage_go_proto.VName `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Definition *storage_go_proto.VName `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *FileDecorations_TargetDefinition) Reset() {
	*x = FileDecorations_TargetDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_TargetDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_TargetDefinition) ProtoMessage() {}

func (x *FileDecorations_TargetDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_TargetDefinition.ProtoReflect.Descriptor instead.
func (*FileDecorations_TargetDefinition) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 5}
}

func (x *FileDecorations_TargetDefinition) GetTarget() *storage_go_proto.VName {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *FileDecorations_TargetDefinition) GetDefinition() *storage_go_proto.VName {
	if x != nil {
		return x.Definition
	}
	return nil
}

type FileDecorations_DefinitionLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *serving_go_proto.ExpandedAnchor `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *FileDecorations_DefinitionLocation) Reset() {
	*x = FileDecorations_DefinitionLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_DefinitionLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_DefinitionLocation) ProtoMessage() {}

func (x *FileDecorations_DefinitionLocation) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_DefinitionLocation.ProtoReflect.Descriptor instead.
func (*FileDecorations_DefinitionLocation) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 6}
}

func (x *FileDecorations_DefinitionLocation) GetLocation() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.Location
	}
	return nil
}

type FileDecorations_Override struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Override     *storage_go_proto.VName       `protobuf:"bytes,1,opt,name=override,proto3" json:"override,omitempty"`
	MarkedSource *common_go_proto.MarkedSource `protobuf:"bytes,2,opt,name=marked_source,json=markedSource,proto3" json:"marked_source,omitempty"`
}

func (x *FileDecorations_Override) Reset() {
	*x = FileDecorations_Override{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_Override) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_Override) ProtoMessage() {}

func (x *FileDecorations_Override) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_Override.ProtoReflect.Descriptor instead.
func (*FileDecorations_Override) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 7}
}

func (x *FileDecorations_Override) GetOverride() *storage_go_proto.VName {
	if x != nil {
		return x.Override
	}
	return nil
}

func (x *FileDecorations_Override) GetMarkedSource() *common_go_proto.MarkedSource {
	if x != nil {
		return x.MarkedSource
	}
	return nil
}

type FileDecorations_Diagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostic *common_go_proto.Diagnostic `protobuf:"bytes,1,opt,name=diagnostic,proto3" json:"diagnostic,omitempty"`
}

func (x *FileDecorations_Diagnostic) Reset() {
	*x = FileDecorations_Diagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDecorations_Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDecorations_Diagnostic) ProtoMessage() {}

func (x *FileDecorations_Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDecorations_Diagnostic.ProtoReflect.Descriptor instead.
func (*FileDecorations_Diagnostic) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{0, 8}
}

func (x *FileDecorations_Diagnostic) GetDiagnostic() *common_go_proto.Diagnostic {
	if x != nil {
		return x.Diagnostic
	}
	return nil
}

type CrossReferences_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node         *schema_go_proto.Node         `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	MarkedSource *common_go_proto.MarkedSource `protobuf:"bytes,2,opt,name=marked_source,json=markedSource,proto3" json:"marked_source,omitempty"`
	MergeWith    []*storage_go_proto.VName     `protobuf:"bytes,3,rep,name=merge_with,json=mergeWith,proto3" json:"merge_with,omitempty"`
}

func (x *CrossReferences_Index) Reset() {
	*x = CrossReferences_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_Index) ProtoMessage() {}

func (x *CrossReferences_Index) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_Index.ProtoReflect.Descriptor instead.
func (*CrossReferences_Index) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CrossReferences_Index) GetNode() *schema_go_proto.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *CrossReferences_Index) GetMarkedSource() *common_go_proto.MarkedSource {
	if x != nil {
		return x.MarkedSource
	}
	return nil
}

func (x *CrossReferences_Index) GetMergeWith() []*storage_go_proto.VName {
	if x != nil {
		return x.MergeWith
	}
	return nil
}

type CrossReferences_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*CrossReferences_Reference_KytheKind
	//	*CrossReferences_Reference_GenericKind
	Kind     isCrossReferences_Reference_Kind `protobuf_oneof:"kind"`
	Location *serving_go_proto.ExpandedAnchor `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *CrossReferences_Reference) Reset() {
	*x = CrossReferences_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_Reference) ProtoMessage() {}

func (x *CrossReferences_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_Reference.ProtoReflect.Descriptor instead.
func (*CrossReferences_Reference) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 1}
}

func (m *CrossReferences_Reference) GetKind() isCrossReferences_Reference_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *CrossReferences_Reference) GetKytheKind() schema_go_proto.EdgeKind {
	if x, ok := x.GetKind().(*CrossReferences_Reference_KytheKind); ok {
		return x.KytheKind
	}
	return schema_go_proto.EdgeKind(0)
}

func (x *CrossReferences_Reference) GetGenericKind() string {
	if x, ok := x.GetKind().(*CrossReferences_Reference_GenericKind); ok {
		return x.GenericKind
	}
	return ""
}

func (x *CrossReferences_Reference) GetLocation() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.Location
	}
	return nil
}

type isCrossReferences_Reference_Kind interface {
	isCrossReferences_Reference_Kind()
}

type CrossReferences_Reference_KytheKind struct {
	KytheKind schema_go_proto.EdgeKind `protobuf:"varint,1,opt,name=kythe_kind,json=kytheKind,proto3,enum=kythe.proto.schema.EdgeKind,oneof"`
}

type CrossReferences_Reference_GenericKind struct {
	GenericKind string `protobuf:"bytes,2,opt,name=generic_kind,json=genericKind,proto3,oneof"`
}

func (*CrossReferences_Reference_KytheKind) isCrossReferences_Reference_Kind() {}

func (*CrossReferences_Reference_GenericKind) isCrossReferences_Reference_Kind() {}

type CrossReferences_Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *storage_go_proto.VName `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// Types that are assignable to Kind:
	//
	//	*CrossReferences_Relation_KytheKind
	//	*CrossReferences_Relation_GenericKind
	Kind    isCrossReferences_Relation_Kind `protobuf_oneof:"kind"`
	Ordinal int32                           `protobuf:"varint,4,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Reverse bool                            `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *CrossReferences_Relation) Reset() {
	*x = CrossReferences_Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_Relation) ProtoMessage() {}

func (x *CrossReferences_Relation) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_Relation.ProtoReflect.Descriptor instead.
func (*CrossReferences_Relation) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 2}
}

func (x *CrossReferences_Relation) GetNode() *storage_go_proto.VName {
	if x != nil {
		return x.Node
	}
	return nil
}

func (m *CrossReferences_Relation) GetKind() isCrossReferences_Relation_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *CrossReferences_Relation) GetKytheKind() schema_go_proto.EdgeKind {
	if x, ok := x.GetKind().(*CrossReferences_Relation_KytheKind); ok {
		return x.KytheKind
	}
	return schema_go_proto.EdgeKind(0)
}

func (x *CrossReferences_Relation) GetGenericKind() string {
	if x, ok := x.GetKind().(*CrossReferences_Relation_GenericKind); ok {
		return x.GenericKind
	}
	return ""
}

func (x *CrossReferences_Relation) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *CrossReferences_Relation) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type isCrossReferences_Relation_Kind interface {
	isCrossReferences_Relation_Kind()
}

type CrossReferences_Relation_KytheKind struct {
	KytheKind schema_go_proto.EdgeKind `protobuf:"varint,2,opt,name=kythe_kind,json=kytheKind,proto3,enum=kythe.proto.schema.EdgeKind,oneof"`
}

type CrossReferences_Relation_GenericKind struct {
	GenericKind string `protobuf:"bytes,3,opt,name=generic_kind,json=genericKind,proto3,oneof"`
}

func (*CrossReferences_Relation_KytheKind) isCrossReferences_Relation_Kind() {}

func (*CrossReferences_Relation_GenericKind) isCrossReferences_Relation_Kind() {}

type CrossReferences_Caller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller       *storage_go_proto.VName          `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	Location     *serving_go_proto.ExpandedAnchor `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	MarkedSource *common_go_proto.MarkedSource    `protobuf:"bytes,3,opt,name=marked_source,json=markedSource,proto3" json:"marked_source,omitempty"`
}

func (x *CrossReferences_Caller) Reset() {
	*x = CrossReferences_Caller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_Caller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_Caller) ProtoMessage() {}

func (x *CrossReferences_Caller) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_Caller.ProtoReflect.Descriptor instead.
func (*CrossReferences_Caller) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 3}
}

func (x *CrossReferences_Caller) GetCaller() *storage_go_proto.VName {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *CrossReferences_Caller) GetLocation() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CrossReferences_Caller) GetMarkedSource() *common_go_proto.MarkedSource {
	if x != nil {
		return x.MarkedSource
	}
	return nil
}

type CrossReferences_Callsite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller   *storage_go_proto.VName          `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	Location *serving_go_proto.ExpandedAnchor `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Kind     CrossReferences_Callsite_Kind    `protobuf:"varint,3,opt,name=kind,proto3,enum=kythe.proto.serving.xrefs.CrossReferences_Callsite_Kind" json:"kind,omitempty"`
}

func (x *CrossReferences_Callsite) Reset() {
	*x = CrossReferences_Callsite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_Callsite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_Callsite) ProtoMessage() {}

func (x *CrossReferences_Callsite) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_Callsite.ProtoReflect.Descriptor instead.
func (*CrossReferences_Callsite) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 4}
}

func (x *CrossReferences_Callsite) GetCaller() *storage_go_proto.VName {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *CrossReferences_Callsite) GetLocation() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CrossReferences_Callsite) GetKind() CrossReferences_Callsite_Kind {
	if x != nil {
		return x.Kind
	}
	return CrossReferences_Callsite_UNKNOWN
}

type CrossReferences_RelatedNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *schema_go_proto.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *CrossReferences_RelatedNode) Reset() {
	*x = CrossReferences_RelatedNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_RelatedNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_RelatedNode) ProtoMessage() {}

func (x *CrossReferences_RelatedNode) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_RelatedNode.ProtoReflect.Descriptor instead.
func (*CrossReferences_RelatedNode) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 5}
}

func (x *CrossReferences_RelatedNode) GetNode() *schema_go_proto.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type CrossReferences_NodeDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node     *storage_go_proto.VName          `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Location *serving_go_proto.ExpandedAnchor `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *CrossReferences_NodeDefinition) Reset() {
	*x = CrossReferences_NodeDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kythe_proto_xref_serving_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossReferences_NodeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossReferences_NodeDefinition) ProtoMessage() {}

func (x *CrossReferences_NodeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_kythe_proto_xref_serving_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossReferences_NodeDefinition.ProtoReflect.Descriptor instead.
func (*CrossReferences_NodeDefinition) Descriptor() ([]byte, []int) {
	return file_kythe_proto_xref_serving_proto_rawDescGZIP(), []int{1, 6}
}

func (x *CrossReferences_NodeDefinition) GetNode() *storage_go_proto.VName {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *CrossReferences_NodeDefinition) GetLocation() *serving_go_proto.ExpandedAnchor {
	if x != nil {
		return x.Location
	}
	return nil
}

var File_kythe_proto_xref_serving_proto protoreflect.FileDescriptor

var file_kythe_proto_xref_serving_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x72,
	0x65, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x1a, 0x18, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x0f, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x45, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e,
	0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x64, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78,
	0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x6a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x13, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78,
	0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x12, 0x57, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x1a, 0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x5c, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x85, 0x02, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x23, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x9a, 0x02,
	0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x12, 0x46, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x63,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x0a,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x58, 0x0a, 0x15, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x52, 0x14, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3a, 0x0a, 0x0a, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x72, 0x0a, 0x10, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x55, 0x0a, 0x12, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x81, 0x01, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2e,
	0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x45,
	0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x4c, 0x0a, 0x0a, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xcc, 0x0e, 0x0a,
	0x0f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x79,
	0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x54, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e,
	0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4b, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x5b, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66,
	0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x64, 0x0a, 0x0f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x72, 0x65, 0x66,
	0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0xaf, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x31, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x1a, 0xb8, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x23, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a,
	0xd2, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x64,
	0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x1a, 0xbc, 0x01, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0d,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x1a, 0xf4, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6b, 0x79,
	0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x2e, 0x78, 0x72, 0x65, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x2d, 0x0a, 0x04, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x56, 0x45, 0x52, 0x52, 0x49, 0x44, 0x45, 0x10, 0x02, 0x1a, 0x3b, 0x0a, 0x0b, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x79, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64,
	0x65, 0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x38, 0x0a, 0x1f, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x15,
	0x78, 0x72, 0x65, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kythe_proto_xref_serving_proto_rawDescOnce sync.Once
	file_kythe_proto_xref_serving_proto_rawDescData = file_kythe_proto_xref_serving_proto_rawDesc
)

func file_kythe_proto_xref_serving_proto_rawDescGZIP() []byte {
	file_kythe_proto_xref_serving_proto_rawDescOnce.Do(func() {
		file_kythe_proto_xref_serving_proto_rawDescData = protoimpl.X.CompressGZIP(file_kythe_proto_xref_serving_proto_rawDescData)
	})
	return file_kythe_proto_xref_serving_proto_rawDescData
}

var file_kythe_proto_xref_serving_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kythe_proto_xref_serving_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_kythe_proto_xref_serving_proto_goTypes = []interface{}{
	(CrossReferences_Callsite_Kind)(0),                  // 0: kythe.proto.serving.xrefs.CrossReferences.Callsite.Kind
	(*FileDecorations)(nil),                             // 1: kythe.proto.serving.xrefs.FileDecorations
	(*CrossReferences)(nil),                             // 2: kythe.proto.serving.xrefs.CrossReferences
	(*FileDecorations_Index)(nil),                       // 3: kythe.proto.serving.xrefs.FileDecorations.Index
	(*FileDecorations_Text)(nil),                        // 4: kythe.proto.serving.xrefs.FileDecorations.Text
	(*FileDecorations_Target)(nil),                      // 5: kythe.proto.serving.xrefs.FileDecorations.Target
	(*FileDecorations_TargetOverride)(nil),              // 6: kythe.proto.serving.xrefs.FileDecorations.TargetOverride
	(*FileDecorations_TargetNode)(nil),                  // 7: kythe.proto.serving.xrefs.FileDecorations.TargetNode
	(*FileDecorations_TargetDefinition)(nil),            // 8: kythe.proto.serving.xrefs.FileDecorations.TargetDefinition
	(*FileDecorations_DefinitionLocation)(nil),          // 9: kythe.proto.serving.xrefs.FileDecorations.DefinitionLocation
	(*FileDecorations_Override)(nil),                    // 10: kythe.proto.serving.xrefs.FileDecorations.Override
	(*FileDecorations_Diagnostic)(nil),                  // 11: kythe.proto.serving.xrefs.FileDecorations.Diagnostic
	(*CrossReferences_Index)(nil),                       // 12: kythe.proto.serving.xrefs.CrossReferences.Index
	(*CrossReferences_Reference)(nil),                   // 13: kythe.proto.serving.xrefs.CrossReferences.Reference
	(*CrossReferences_Relation)(nil),                    // 14: kythe.proto.serving.xrefs.CrossReferences.Relation
	(*CrossReferences_Caller)(nil),                      // 15: kythe.proto.serving.xrefs.CrossReferences.Caller
	(*CrossReferences_Callsite)(nil),                    // 16: kythe.proto.serving.xrefs.CrossReferences.Callsite
	(*CrossReferences_RelatedNode)(nil),                 // 17: kythe.proto.serving.xrefs.CrossReferences.RelatedNode
	(*CrossReferences_NodeDefinition)(nil),              // 18: kythe.proto.serving.xrefs.CrossReferences.NodeDefinition
	(*storage_go_proto.VName)(nil),                      // 19: kythe.proto.VName
	(schema_go_proto.EdgeKind)(0),                       // 20: kythe.proto.schema.EdgeKind
	(serving_go_proto.FileDecorations_Override_Kind)(0), // 21: kythe.proto.serving.FileDecorations.Override.Kind
	(*serving_go_proto.ExpandedAnchor)(nil),             // 22: kythe.proto.serving.ExpandedAnchor
	(*schema_go_proto.Node)(nil),                        // 23: kythe.proto.schema.Node
	(*common_go_proto.MarkedSource)(nil),                // 24: kythe.proto.common.MarkedSource
	(*common_go_proto.Diagnostic)(nil),                  // 25: kythe.proto.common.Diagnostic
}
var file_kythe_proto_xref_serving_proto_depIdxs = []int32{
	19, // 0: kythe.proto.serving.xrefs.FileDecorations.file:type_name -> kythe.proto.VName
	3,  // 1: kythe.proto.serving.xrefs.FileDecorations.index:type_name -> kythe.proto.serving.xrefs.FileDecorations.Index
	4,  // 2: kythe.proto.serving.xrefs.FileDecorations.text:type_name -> kythe.proto.serving.xrefs.FileDecorations.Text
	5,  // 3: kythe.proto.serving.xrefs.FileDecorations.target:type_name -> kythe.proto.serving.xrefs.FileDecorations.Target
	6,  // 4: kythe.proto.serving.xrefs.FileDecorations.target_override:type_name -> kythe.proto.serving.xrefs.FileDecorations.TargetOverride
	7,  // 5: kythe.proto.serving.xrefs.FileDecorations.target_node:type_name -> kythe.proto.serving.xrefs.FileDecorations.TargetNode
	8,  // 6: kythe.proto.serving.xrefs.FileDecorations.target_definition:type_name -> kythe.proto.serving.xrefs.FileDecorations.TargetDefinition
	9,  // 7: kythe.proto.serving.xrefs.FileDecorations.definition_location:type_name -> kythe.proto.serving.xrefs.FileDecorations.DefinitionLocation
	10, // 8: kythe.proto.serving.xrefs.FileDecorations.override:type_name -> kythe.proto.serving.xrefs.FileDecorations.Override
	11, // 9: kythe.proto.serving.xrefs.FileDecorations.diagnostic:type_name -> kythe.proto.serving.xrefs.FileDecorations.Diagnostic
	19, // 10: kythe.proto.serving.xrefs.CrossReferences.source:type_name -> kythe.proto.VName
	12, // 11: kythe.proto.serving.xrefs.CrossReferences.index:type_name -> kythe.proto.serving.xrefs.CrossReferences.Index
	13, // 12: kythe.proto.serving.xrefs.CrossReferences.reference:type_name -> kythe.proto.serving.xrefs.CrossReferences.Reference
	14, // 13: kythe.proto.serving.xrefs.CrossReferences.relation:type_name -> kythe.proto.serving.xrefs.CrossReferences.Relation
	15, // 14: kythe.proto.serving.xrefs.CrossReferences.caller:type_name -> kythe.proto.serving.xrefs.CrossReferences.Caller
	16, // 15: kythe.proto.serving.xrefs.CrossReferences.callsite:type_name -> kythe.proto.serving.xrefs.CrossReferences.Callsite
	17, // 16: kythe.proto.serving.xrefs.CrossReferences.related_node:type_name -> kythe.proto.serving.xrefs.CrossReferences.RelatedNode
	18, // 17: kythe.proto.serving.xrefs.CrossReferences.node_definition:type_name -> kythe.proto.serving.xrefs.CrossReferences.NodeDefinition
	20, // 18: kythe.proto.serving.xrefs.FileDecorations.Target.kythe_kind:type_name -> kythe.proto.schema.EdgeKind
	19, // 19: kythe.proto.serving.xrefs.FileDecorations.Target.target:type_name -> kythe.proto.VName
	19, // 20: kythe.proto.serving.xrefs.FileDecorations.TargetOverride.overridden:type_name -> kythe.proto.VName
	21, // 21: kythe.proto.serving.xrefs.FileDecorations.TargetOverride.kind:type_name -> kythe.proto.serving.FileDecorations.Override.Kind
	19, // 22: kythe.proto.serving.xrefs.FileDecorations.TargetOverride.overriding:type_name -> kythe.proto.VName
	22, // 23: kythe.proto.serving.xrefs.FileDecorations.TargetOverride.overriding_definition:type_name -> kythe.proto.serving.ExpandedAnchor
	23, // 24: kythe.proto.serving.xrefs.FileDecorations.TargetNode.node:type_name -> kythe.proto.schema.Node
	19, // 25: kythe.proto.serving.xrefs.FileDecorations.TargetDefinition.target:type_name -> kythe.proto.VName
	19, // 26: kythe.proto.serving.xrefs.FileDecorations.TargetDefinition.definition:type_name -> kythe.proto.VName
	22, // 27: kythe.proto.serving.xrefs.FileDecorations.DefinitionLocation.location:type_name -> kythe.proto.serving.ExpandedAnchor
	19, // 28: kythe.proto.serving.xrefs.FileDecorations.Override.override:type_name -> kythe.proto.VName
	24, // 29: kythe.proto.serving.xrefs.FileDecorations.Override.marked_source:type_name -> kythe.proto.common.MarkedSource
	25, // 30: kythe.proto.serving.xrefs.FileDecorations.Diagnostic.diagnostic:type_name -> kythe.proto.common.Diagnostic
	23, // 31: kythe.proto.serving.xrefs.CrossReferences.Index.node:type_name -> kythe.proto.schema.Node
	24, // 32: kythe.proto.serving.xrefs.CrossReferences.Index.marked_source:type_name -> kythe.proto.common.MarkedSource
	19, // 33: kythe.proto.serving.xrefs.CrossReferences.Index.merge_with:type_name -> kythe.proto.VName
	20, // 34: kythe.proto.serving.xrefs.CrossReferences.Reference.kythe_kind:type_name -> kythe.proto.schema.EdgeKind
	22, // 35: kythe.proto.serving.xrefs.CrossReferences.Reference.location:type_name -> kythe.proto.serving.ExpandedAnchor
	19, // 36: kythe.proto.serving.xrefs.CrossReferences.Relation.node:type_name -> kythe.proto.VName
	20, // 37: kythe.proto.serving.xrefs.CrossReferences.Relation.kythe_kind:type_name -> kythe.proto.schema.EdgeKind
	19, // 38: kythe.proto.serving.xrefs.CrossReferences.Caller.caller:type_name -> kythe.proto.VName
	22, // 39: kythe.proto.serving.xrefs.CrossReferences.Caller.location:type_name -> kythe.proto.serving.ExpandedAnchor
	24, // 40: kythe.proto.serving.xrefs.CrossReferences.Caller.marked_source:type_name -> kythe.proto.common.MarkedSource
	19, // 41: kythe.proto.serving.xrefs.CrossReferences.Callsite.caller:type_name -> kythe.proto.VName
	22, // 42: kythe.proto.serving.xrefs.CrossReferences.Callsite.location:type_name -> kythe.proto.serving.ExpandedAnchor
	0,  // 43: kythe.proto.serving.xrefs.CrossReferences.Callsite.kind:type_name -> kythe.proto.serving.xrefs.CrossReferences.Callsite.Kind
	23, // 44: kythe.proto.serving.xrefs.CrossReferences.RelatedNode.node:type_name -> kythe.proto.schema.Node
	19, // 45: kythe.proto.serving.xrefs.CrossReferences.NodeDefinition.node:type_name -> kythe.proto.VName
	22, // 46: kythe.proto.serving.xrefs.CrossReferences.NodeDefinition.location:type_name -> kythe.proto.serving.ExpandedAnchor
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_kythe_proto_xref_serving_proto_init() }
func file_kythe_proto_xref_serving_proto_init() {
	if File_kythe_proto_xref_serving_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kythe_proto_xref_serving_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_TargetOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_TargetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_TargetDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_DefinitionLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_Override); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDecorations_Diagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_Caller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_Callsite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_RelatedNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kythe_proto_xref_serving_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossReferences_NodeDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kythe_proto_xref_serving_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FileDecorations_Index_)(nil),
		(*FileDecorations_Text_)(nil),
		(*FileDecorations_Target_)(nil),
		(*FileDecorations_TargetOverride_)(nil),
		(*FileDecorations_TargetNode_)(nil),
		(*FileDecorations_TargetDefinition_)(nil),
		(*FileDecorations_DefinitionLocation_)(nil),
		(*FileDecorations_Override_)(nil),
		(*FileDecorations_Diagnostic_)(nil),
	}
	file_kythe_proto_xref_serving_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CrossReferences_Index_)(nil),
		(*CrossReferences_Reference_)(nil),
		(*CrossReferences_Relation_)(nil),
		(*CrossReferences_Caller_)(nil),
		(*CrossReferences_Callsite_)(nil),
		(*CrossReferences_RelatedNode_)(nil),
		(*CrossReferences_NodeDefinition_)(nil),
	}
	file_kythe_proto_xref_serving_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*FileDecorations_Target_KytheKind)(nil),
		(*FileDecorations_Target_GenericKind)(nil),
	}
	file_kythe_proto_xref_serving_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*CrossReferences_Reference_KytheKind)(nil),
		(*CrossReferences_Reference_GenericKind)(nil),
	}
	file_kythe_proto_xref_serving_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*CrossReferences_Relation_KytheKind)(nil),
		(*CrossReferences_Relation_GenericKind)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kythe_proto_xref_serving_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kythe_proto_xref_serving_proto_goTypes,
		DependencyIndexes: file_kythe_proto_xref_serving_proto_depIdxs,
		EnumInfos:         file_kythe_proto_xref_serving_proto_enumTypes,
		MessageInfos:      file_kythe_proto_xref_serving_proto_msgTypes,
	}.Build()
	File_kythe_proto_xref_serving_proto = out.File
	file_kythe_proto_xref_serving_proto_rawDesc = nil
	file_kythe_proto_xref_serving_proto_goTypes = nil
	file_kythe_proto_xref_serving_proto_depIdxs = nil
}
